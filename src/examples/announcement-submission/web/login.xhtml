<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:fx="http://www.flexive.com/jsf/core">
<head>
    <!-- Add flexive includes -->
    <fx:includes/>
    <!-- Add our own stylesheet -->
    <link rel="stylesheet" type="text/css" href="css/announcement-submission.css"/>
    <title>[fleXive] Security Tutorial 01</title>
</head>

<body>

<!-- Output JSF error or info messages here -->
<h:messages showDetail="true" errorClass="errorMessage" infoClass="infoMessage"/>

<div class="message">
    <p><b>[fleXive] Security Tutorial 01: Announcement submission application</b></p>

    <p class="message"><b>What to learn in this Tutorial</b><br/>
        This tutorial covers the basics of user account creation, user authentication and content security.<br/>
        The basic idea is to have 2 separate user groups for creating and reading announcements:<br/>
        The "editors" user group is able to read, create, edit and delete all announcements,
        whereas the "visitors" user group may only read certain announcements.
    </p>

    <p>First the blueprint of an announcement, two user groups, two users and access control have been set up by the runonce script <code
            class="generic">asubmission001.groovy</code>. This is where the magic happens:
        <h:outputLink
            onclick="window.open('http://wiki.flexive.org/confluence/display/FX/Initial+setup', 'In_depth_explanation', 'width=950,height=600,left=50,top=200,scrollbars=yes,resizable=yes');"
            value="#">
       See the <code
            class="generic">asubmission001.groovy</code> script explained
        </h:outputLink>
    </p>

    <p>
        Each user group has a user assigned:
    </p>

    <p>For the editors group it's</p>
    <ul>
        <li>Username: announcement.editor</li>
        <li>Password: editor</li>
    </ul>
    <p>For the visitors group it's</p>
    <ul>
        <li>Username: announcement.visitor</li>
        <li>Password: visitor</li>
    </ul>

    <p>Users of the editors group may <code class="generic">read</code>, <code class="generic">create</code>,
        <code class="generic">edit</code> and <code class="generic">delete</code> announcement instances.<br/>
        Users of the visitors group may only <code class="generic">read</code> certain announcement instances.</p>
        Go ahead and try it out!
</div>

<h:form>
    <fx:fieldSet legend="Login">
        <h:outputText value="Username"/><br/>
        <h:inputText id="username" value="#{fxAuthenticationBean.username}"/><br/>
        <h:outputText value="Password"/><br/>
        <h:inputSecret id="password" value="#{fxAuthenticationBean.password}"/><br/>
        <h:selectBooleanCheckbox id="takeover" value="#{fxAuthenticationBean.takeover}"/>
        <h:outputText value="Take over"/><br/>
        <h:commandButton action="#{fxAuthenticationBean.login}" value="Login"/>
    </fx:fieldSet>
</h:form>

<p><h:outputLink
        onclick="window.open('http://wiki.flexive.org/confluence/display/FX/Logging+in', 'In_depth_explanation', 'width=950,height=600,left=50,top=200,scrollbars=yes,resizable=yes');"
        value="#">
    See the login form explained
</h:outputLink>
</p>

</body>
</html>