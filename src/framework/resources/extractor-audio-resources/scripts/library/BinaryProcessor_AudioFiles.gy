/** *************************************************************
 *  This file is part of the [fleXive](R) framework.
 *
 *  Copyright (c) 1999-2010
 *  UCS - unique computing solutions gmbh (http://www.ucs.at)
 *  All rights reserved
 *
 *  The [fleXive](R) project is free software; you can redistribute
 *  it and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation.
 *
 *  The GNU Lesser General Public License can be found at
 *  http://www.gnu.org/licenses/lgpl.html.
 *  A copy is found in the textfile LGPL.txt and important notices to the
 *  license from the author are found in LICENSE.txt distributed with
 *  these libraries.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  For further information about UCS - unique computing solutions gmbh,
 *  please see the company website: http://www.ucs.at
 *
 *  For further information about [fleXive](R), please see the
 *  project website: http://www.flexive.org
 *
 *
 *  This copyright notice MUST APPEAR in all copies of the file!
 ************************************************************** */

import com.flexive.shared.media.FxMediaEngine
import com.flexive.shared.media.FxMetadata

/*
Parameters (valid for all binarypreviewprocess scripts):
===========
"boolean processed",
"boolean useDefaultPreview",
"int defaultId",
"String mimeType",
"String metaData",
"File binaryFile",
"File previewFile1",
"File previewFile2",
"File previewFile3",
"File previewFile4",
"int[] dimensionPreview1",
"int[] dimensionPreview2",
"int[] dimensionPreview3",
"int[] dimensionPreview4"
*/

if (processed)
  return

boolean isAudioFile = mimeType.startsWith("audio/")
if (!isAudioFile)
  return

//parse metadata
println "Processing an audio file ..."
FxMetadata meta = FxMediaEngine.identify(mimeType, binaryFile)
if (!meta.isAudioMetadata())
  return //could not identify as audio file

metaData = meta.toXML()

processed = true
useDefaultPreview = true

println "Processed an audio file."