/***************************************************************
 *  This file is part of the [fleXive](R) project.
 *
 *  Copyright (c) 1999-2008
 *  UCS - unique computing solutions gmbh (http://www.ucs.at)
 *  All rights reserved
 *
 *  The [fleXive](R) project is free software; you can redistribute
 *  it and/or modify it under the terms of the GNU General Public
 *  License as published by the Free Software Foundation;
 *  either version 2 of the License, or (at your option) any
 *  later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *  A copy is found in the textfile GPL.txt and important notices to the
 *  license from the author are found in LICENSE.txt distributed with
 *  these libraries.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  For further information about UCS - unique computing solutions gmbh,
 *  please see the company website: http://www.ucs.at
 *
 *  For further information about [fleXive](R), please see the
 *  project website: http://www.flexive.org
 *
 *
 *  This copyright notice MUST APPEAR in all copies of the file!
 ***************************************************************/
import com.flexive.extractor.ExtractedData
import com.flexive.extractor.Extractor
import com.flexive.shared.value.BinaryDescriptor

if (processed) {
    println "already processed in documents ..."
    return
}

boolean isDocument = true
int doc_previewId = BinaryDescriptor.SYS_UNKNOWN
//Extractor.DOC_TYPE docType = Extractor.DOC_TYPE.WORD
switch (mimeType) {
    case "application/msword":
        doc_previewId = BinaryDescriptor.SYS_DOC
        docType = Extractor.DocumentType.Word
        break
    case "application/mspowerpoint":
        doc_previewId = BinaryDescriptor.SYS_PPT
        docType = Extractor.DocumentType.Powerpoint
        break
    case "application/msexcel":
        doc_previewId = BinaryDescriptor.SYS_XLS
        docType = Extractor.DocumentType.Excel
        break
    case "application/pdf":
        doc_previewId = BinaryDescriptor.SYS_PDF
        docType = Extractor.DocumentType.PDF
        break
    case "text/html":
        doc_previewId = BinaryDescriptor.SYS_HTML
        docType = Extractor.DocumentType.HTML
        break
    default:
        isDocument = false
}

if (!isDocument) {
    println "no document!"
    return
}
println "processing a document!"
try {
    metaData = Extractor.extractData(binaryFile, docType).toXML()
} catch (Throwable t) {
    println "Failed to extract data, returning empty set: " + t.message
    metaData = ExtractedData.toEmptyXML()
}

processed = true
useDefaultPreview = true
defaultId = doc_previewId
println "Processed document ok"