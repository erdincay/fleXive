/***************************************************************
 *  This file is part of the [fleXive](R) framework.
 *
 *  Copyright (c) 1999-2008
 *  UCS - unique computing solutions gmbh (http://www.ucs.at)
 *  All rights reserved
 *
 *  The [fleXive](R) project is free software; you can redistribute
 *  it and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation.
 *
 *  The GNU Lesser General Public License can be found at
 *  http://www.gnu.org/licenses/lgpl.html.
 *  A copy is found in the textfile LGPL.txt and important notices to the
 *  license from the author are found in LICENSE.txt distributed with
 *  these libraries.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  For further information about UCS - unique computing solutions gmbh,
 *  please see the company website: http://www.ucs.at
 *
 *  For further information about [fleXive](R), please see the
 *  project website: http://www.flexive.org
 *
 *
 *  This copyright notice MUST APPEAR in all copies of the file!
 ***************************************************************/


/**
 * Creates some demo entries for the flexive backend.
 *
 * @author Daniel Lichtenberger (daniel.lichtenberger@flexive.com), UCS - unique computing solutions gmbh (http://www.ucs.at)
 * @version $Rev$
 */

import com.flexive.shared.*
import com.flexive.shared.tree.FxTreeNodeEdit
import com.flexive.shared.content.FxContent
import com.flexive.shared.value.FxString
import com.flexive.shared.value.FxHTML
import com.flexive.shared.search.query.QueryRootNode
import com.flexive.shared.search.query.AssignmentValueNode
import com.flexive.shared.search.query.PropertyValueComparator
import com.flexive.shared.search.query.PropertyValueNode
import com.flexive.shared.value.FxLargeNumber
import com.flexive.shared.search.AdminResultLocations

// add a article to the tree
final FxContent article = EJBLookup.contentEngine.initialize("article")
article.setValue("/title", new FxString(FxLanguage.ENGLISH, "Welcome to [fleXive] 3.1").setTranslation(FxLanguage.GERMAN, "Willkommen bei [fleXive] 3.1"))
article.setValue("/longtexthtml", new FxHTML(false,
"""<p>Welcome to your installation of [fleXive] 3.1.</p><h3>What is [fleXive]?</h3><p>[fleXive] is a <strong>Java EE 5 open-source (LGPL) framework</strong> for the development of complex and evolving (web-)applications. It <strong>speeds up development</strong> as it handles numerous important application issues and keeps your application flexible over the development-cycle.</p>"""))
def pk = article.save().pk
EJBLookup.treeEngine.save(FxTreeNodeEdit.createNew("Welcome to [flexive] 3.1").setReference(pk))

// create demo briefcase
def bcId = EJBLookup.briefcaseEngine.create("Demo Briefcase", "Briefcases are collections of objects. You can add and remove objects to a briefcase, and also share them with other users.", null)
EJBLookup.briefcaseEngine.addItems(bcId, pk.id)

// create demo query
final QueryRootNode root = new QueryRootNode(QueryRootNode.Type.CONTENTSEARCH, AdminResultLocations.ADMIN);
root.setName("Demo query")

final PropertyValueNode node = new PropertyValueNode(1, CacheAdmin.environment.getProperty("typedef").id)
node.setComparator(PropertyValueComparator.EQ)
node.setValue(new FxLargeNumber(false, CacheAdmin.environment.getType("ARTICLE").id))
root.addChild(node)

final AssignmentValueNode node2 = new AssignmentValueNode(2, CacheAdmin.environment.getAssignment("article/title").id)
node2.setComparator(PropertyValueComparator.LIKE)
node2.setValue(new FxString(false, "Welcome*"))
root.addChild(node2)

EJBLookup.searchEngine.save(root)