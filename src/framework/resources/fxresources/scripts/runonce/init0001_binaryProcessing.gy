/***************************************************************
 *  This file is part of the [fleXive](R) framework.
 *
 *  Copyright (c) 1999-2010
 *  UCS - unique computing solutions gmbh (http://www.ucs.at)
 *  All rights reserved
 *
 *  The [fleXive](R) project is free software; you can redistribute
 *  it and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation.
 *
 *  The GNU Lesser General Public License can be found at
 *  http://www.gnu.org/licenses/lgpl.html.
 *  A copy is found in the textfile LGPL.txt and important notices to the
 *  license from the author are found in LICENSE.txt distributed with
 *  these libraries.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  For further information about UCS - unique computing solutions gmbh,
 *  please see the company website: http://www.ucs.at
 *
 *  For further information about [fleXive](R), please see the
 *  project website: http://www.flexive.org
 *
 *
 *  This copyright notice MUST APPEAR in all copies of the file!
 ***************************************************************/
import com.flexive.shared.scripting.FxScriptEvent
import com.flexive.shared.EJBLookup
import com.flexive.shared.scripting.FxScriptInfo

//check if a binary storage directory already exists and back it up if needed (see FX-697)
File binDir = new File(com.flexive.core.storage.binary.FxBinaryUtils.getBinaryDirectory() + File.separatorChar + com.flexive.shared.FxContext.get().divisionId)
if (binDir.exists()) {
  println "Binary directory [${binDir.absolutePath}] exists. Moving it to a backup copy ..."
  String backupDir = ".Backup_" + com.flexive.shared.FxFormatUtils.getUniversalDateTimeFormat().format(new Date(System.currentTimeMillis()))
  backupDir = backupDir.replace('-','_') //remove potential file name problems
  backupDir = backupDir.replace(':','_')
  backupDir = backupDir.replace('+','_')
  backupDir = binDir.absolutePath + backupDir
  if (!binDir.renameTo(new File(backupDir))) {
    println "Failed to rename [${binDir.absolutePath}] to [$backupDir]!"
  } else
    EJBLookup.historyTrackerEngine.track("history.binaryStorage.renamed", binDir.absolutePath, backupDir)
}


//setup binary processing scripts
// binary processing f. images
def se = EJBLookup.getScriptingEngine()
se.createScriptFromLibrary(
        "BinaryProcessor_Images.gy", new FxScriptInfo(-1,
        FxScriptEvent.BinaryPreviewProcess,
        "BinaryProcessor_Images.gy",
        "Binary processing for images",true,false))

// binary processing f. audio files
se.createScriptFromLibrary(
        "BinaryProcessor_AudioFiles.gy", new FxScriptInfo(-1,
        FxScriptEvent.BinaryPreviewProcess,
        "BinaryProcessor_AudioFiles.gy",
        "Binary processing for audio files",true,false))