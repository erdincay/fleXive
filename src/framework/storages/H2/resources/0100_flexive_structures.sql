-- register stored procedures needed for this script
CREATE ALIAS IF NOT EXISTS TIMEMILLIS FOR "com.flexive.H2.StoredProcedures.getTimeMillis";

-- -------------------------
-- Languages
-- -------------------------
CREATE TABLE FXS_LANG (
  LANG_CODE INTEGER NOT NULL,
  ISO_CODE VARCHAR(2) NOT NULL,
  INUSE BOOLEAN DEFAULT FALSE COMMENT 'use this language?',
  DISPPOS INTEGER COMMENT 'display position',
  PRIMARY KEY(LANG_CODE),
  UNIQUE KEY(ISO_CODE)
);
COMMENT ON TABLE FXS_LANG IS 'Language definitions';

CREATE TABLE FXS_LANG_T (
  LANG_CODE INTEGER NOT NULL,
  LANG INTEGER NOT NULL,
  DESCRIPTION TEXT NOT NULL,
  FOREIGN KEY (LANG_CODE) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
ALTER TABLE FXS_LANG_T ADD CONSTRAINT LANG_CODE_LANG UNIQUE(LANG_CODE, LANG);
COMMENT ON TABLE FXS_LANG IS 'Language definitions (translations)';

-- -------------------------
-- MANDATORS
-- -------------------------
CREATE TABLE FXS_MANDATOR (
 ID BIGINT NOT NULL,
 NAME VARCHAR(255) NOT NULL,
 METADATA BIGINT,
 IS_ACTIVE BOOLEAN NOT NULL,
 CREATED_BY BIGINT NOT NULL,
 CREATED_AT BIGINT NOT NULL,
 MODIFIED_BY BIGINT NOT NULL,
 MODIFIED_AT BIGINT NOT NULL,
 PRIMARY KEY(ID),
 UNIQUE UK_MANDATORS_NAME(NAME)
);
COMMENT ON TABLE FXS_MANDATOR IS 'all available mandators';

-- -------------------------
-- ACCOUNTS
-- -------------------------
CREATE TABLE FXS_ACCOUNTS (
 ID BIGINT NOT NULL,
 MANDATOR BIGINT NOT NULL,
 USERNAME VARCHAR(255) NOT NULL,
 PASSWORD VARCHAR(255) NOT NULL,
 EMAIL VARCHAR(255) NOT NULL,
 CONTACT_ID BIGINT,
 VALID_FROM BIGINT,
 VALID_TO BIGINT,
 DESCRIPTION VARCHAR(2000) DEFAULT '',
 CREATED_BY BIGINT NOT NULL,
 CREATED_AT BIGINT NOT NULL,
 MODIFIED_BY BIGINT NOT NULL,
 MODIFIED_AT BIGINT NOT NULL,
 IS_ACTIVE BOOLEAN NOT NULL,
 IS_VALIDATED BOOLEAN NOT NULL,
 LANG INTEGER NOT NULL DEFAULT 1,
 LOGIN_NAME VARCHAR(255) NOT NULL,
 ALLOW_MULTILOGIN BOOLEAN NOT NULL,
 DEFAULT_NODE BIGINT,
 UPDATETOKEN VARCHAR(64) NULL,
 PRIMARY KEY(ID),
 UNIQUE UK_ACCOUNTS_LOGIN_NAME(USERNAME),
 FOREIGN KEY(MANDATOR) REFERENCES FXS_MANDATOR(ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT,
 FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
    ON DELETE RESTRICT ON UPDATE RESTRICT,
 FOREIGN KEY (MANDATOR) REFERENCES FXS_MANDATOR(ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_ACCOUNTS IS 'accounts';
CREATE INDEX IDX_ACCOUNTS_USERNAME ON FXS_ACCOUNTS(USERNAME);
CREATE INDEX IDX_ACCOUNTS_EMAIL ON FXS_ACCOUNTS(EMAIL);

-- -------------------------
-- ACCOUNTS DETAILS
-- -------------------------
CREATE TABLE FXS_ACCOUNT_DETAILS (
 ID BIGINT NOT NULL  ,
 APPLICATION VARCHAR(255)NOT NULL,
 LAST_LOGIN BIGINT NOT NULL,
 LAST_LOGIN_FROM VARCHAR(255) NOT NULL,
 ISLOGGEDIN BOOLEAN NOT NULL,
 FAILED_ATTEMPTS INTEGER NOT NULL,
 AUTHSRC VARCHAR(255) NOT NULL,
-- PRIMARY KEY(ID,APPLICATION), -- don't use primary key to avoid locking tables for logins (FX-868)
 FOREIGN KEY (ID) REFERENCES FXS_ACCOUNTS(ID)
   ON DELETE CASCADE ON UPDATE RESTRICT
);
CREATE INDEX IDX_ACCOUNT_DETAILS_ID_APP ON FXS_ACCOUNT_DETAILS(ID, APPLICATION);
COMMENT ON TABLE FXS_ACCOUNT_DETAILS IS 'accounts details, storing the (last) login state';

-- -------------------------
-- GROUPS
-- -------------------------
CREATE TABLE FXS_USERGROUPS (
 ID BIGINT NOT NULL,
 MANDATOR BIGINT NOT NULL,
 AUTOMANDATOR BIGINT,
 ISSYSTEM BOOLEAN NOT NULL DEFAULT FALSE,
 NAME VARCHAR(255) NOT NULL,
 COLOR VARCHAR(32) NOT NULL DEFAULT '000000',
 CREATED_BY BIGINT NOT NULL,
 CREATED_AT BIGINT NOT NULL,
 MODIFIED_BY BIGINT NOT NULL,
 MODIFIED_AT BIGINT NOT NULL,
 PRIMARY KEY(ID),
 UNIQUE UK_USERGROUPS_NAME(NAME,MANDATOR),
 FOREIGN KEY (MANDATOR) REFERENCES FXS_MANDATOR(ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT,
 FOREIGN KEY (AUTOMANDATOR) REFERENCES FXS_MANDATOR(ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_USERGROUPS IS 'groups';

-- -------------------------
-- GROUPS to ACCOUNTS
-- -------------------------
CREATE TABLE FXS_USERGROUPMEMBERS (
 ACCOUNT BIGINT NOT NULL,
 USERGROUP BIGINT NOT NULL,
 PRIMARY KEY(ACCOUNT,USERGROUP),
 FOREIGN KEY (ACCOUNT) REFERENCES FXS_ACCOUNTS(ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT,
 FOREIGN KEY (USERGROUP) REFERENCES FXS_USERGROUPS(ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_USERGROUPMEMBERS IS 'Groups to accounts relation';

-- -------------------------
-- ACLS
-- -------------------------
CREATE TABLE FXS_ACL (
 ID BIGINT NOT NULL,
 MANDATOR BIGINT NOT NULL,
 NAME VARCHAR(255) NOT NULL,
 DESCRIPTION VARCHAR(255),
 CAT_TYPE INTEGER NOT NULL COMMENT '1=Content, 2=Structure, 3=Workflow',
 COLOR VARCHAR(32)  DEFAULT '000000',
 CREATED_BY BIGINT NOT NULL,
 CREATED_AT BIGINT NOT NULL,
 MODIFIED_BY INTEGER NOT NULL,
 MODIFIED_AT BIGINT NOT NULL,
 PRIMARY KEY(ID),
 FOREIGN KEY (MANDATOR) REFERENCES FXS_MANDATOR(ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT,
 UNIQUE UK_ACL_NAME(NAME)
);
COMMENT ON TABLE FXS_ACL IS 'ACLs';

CREATE TABLE FXS_ACL_T (
  ID BIGINT NOT NULL,
  LANG INTEGER,
  DEFLANG BOOLEAN,
  LABEL TEXT,
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ID) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_ACL_T IS 'ACL translations';

-- -------------------------
-- Role Assignments
-- -------------------------
CREATE TABLE FXS_ROLEMAPPING (
  ACCOUNT BIGINT NOT NULL,
  USERGROUP BIGINT NOT NULL,
  ROLE BIGINT NOT NULL,
  PRIMARY KEY(ACCOUNT,USERGROUP,ROLE),
  FOREIGN KEY (ACCOUNT) REFERENCES FXS_ACCOUNTS(ID)
	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (USERGROUP) REFERENCES FXS_USERGROUPS(ID)
	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_ROLEMAPPING IS 'Role assignments';

-- -------------------------
-- History tracking
-- -------------------------
CREATE TABLE FXS_HISTORY(
  ACCOUNT BIGINT NOT NULL,
  LOGINNAME VARCHAR(512) NOT NULL,
  TIMESTP BIGINT NOT NULL,
  ACTION_KEY VARCHAR(512) NOT NULL,
  ACTION_ARGS VARCHAR(4096) COMMENT 'key arguments, separated by pipe characters',
  SESSION VARCHAR(256),
  APPLICATION VARCHAR(256),
  REMOTEHOST VARCHAR(256),
  TYPEID BIGINT,
  TYPENAME VARCHAR(256),
  PKID BIGINT,
  PKVER INTEGER,
  EN_MESSAGE LONGTEXT NOT NULL,
  DATA LONGTEXT
);
COMMENT ON TABLE FXS_HISTORY IS 'History tracker';

-- -------------------------
-- ACL Assignments
-- -------------------------
CREATE TABLE FXS_ACLASSIGNMENTS(
  USERGROUP BIGINT NOT NULL,
  ACL BIGINT NOT NULL,
  PEDIT BOOLEAN NOT NULL,
  PREMOVE BOOLEAN NOT NULL,
  PEXPORT BOOLEAN NOT NULL,
  PREL BOOLEAN NOT NULL,
  PREAD BOOLEAN NOT NULL,
  PCREATE BOOLEAN NOT NULL,
  CREATED_BY BIGINT NOT NULL,
  CREATED_AT BIGINT NOT NULL,
  MODIFIED_BY BIGINT NOT NULL,
  MODIFIED_AT BIGINT NOT NULL,
  PRIMARY KEY(USERGROUP,ACL),
  FOREIGN KEY (USERGROUP) REFERENCES FXS_USERGROUPS(ID)
	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ACL) REFERENCES FXS_ACL(ID)
	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_ACLASSIGNMENTS IS 'ACL assignments';

-- -------------------------
-- Workflows
-- -------------------------
CREATE TABLE FXS_WORKFLOWS(
  ID BIGINT NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  DESCRIPTION VARCHAR(1024),
  PRIMARY KEY(ID),
  UNIQUE UK_WORKFLOWS_NAME(NAME)
);
COMMENT ON TABLE FXS_WORKFLOWS IS 'Workflows';

-- -------------------------
-- Step Definitions
-- -------------------------
CREATE TABLE FXS_WF_STEPDEFS (
  ID BIGINT NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  UNIQUE_TARGET BIGINT,
  PRIMARY KEY(ID),
  UNIQUE UK_STEPDEFS_NAME(NAME),
  FOREIGN KEY(UNIQUE_TARGET) REFERENCES FXS_WF_STEPDEFS(ID)
	  ON DELETE SET NULL
);
COMMENT ON TABLE FXS_WF_STEPDEFS IS 'Step Templates';

-- -------------------------
-- Step Definitions Translations
-- -------------------------
CREATE TABLE FXS_WF_STEPDEFS_T (
  ID BIGINT NOT NULL,
  LANG INTEGER NOT NULL,
  DEFLANG BOOLEAN,
  NAME VARCHAR(255) NOT NULL,
  PRIMARY KEY(LANG,ID),
  FOREIGN KEY(ID) REFERENCES FXS_WF_STEPDEFS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY(LANG) REFERENCES FXS_LANG(LANG_CODE)
	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_WF_STEPDEFS_T IS 'Step Templates Translation';


-- -------------------------
-- Steps
-- -------------------------
CREATE TABLE FXS_WF_STEPS (
  ID BIGINT NOT NULL,
  STEPDEF BIGINT NOT NULL,
  WORKFLOW BIGINT NOT NULL,
  ACL BIGINT NOT NULL,
  POS INTEGER NOT NULL,
  PRIMARY KEY(ID),
  UNIQUE UK_DEF_WF (STEPDEF, WORKFLOW),
  FOREIGN KEY(STEPDEF) REFERENCES FXS_WF_STEPDEFS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY(WORKFLOW) REFERENCES FXS_WORKFLOWS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY(ACL) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_WF_STEPS IS 'Steps';

-- -------------------------
-- Step routes
-- -------------------------
CREATE TABLE FXS_WF_ROUTES (
  ID BIGINT NOT NULL,
  FROM_STEP BIGINT NOT NULL,
  TO_STEP BIGINT NOT NULL,
  USERGROUP BIGINT NOT NULL ,
  PRIMARY KEY(ID),
  UNIQUE UK_ROUTE(FROM_STEP, TO_STEP, USERGROUP) ,
  FOREIGN KEY(USERGROUP) REFERENCES FXS_USERGROUPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY(FROM_STEP) REFERENCES FXS_WF_STEPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY(TO_STEP) REFERENCES FXS_WF_STEPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_WF_ROUTES IS 'Routes';

-- -------------------------
-- Content Type Definitions
-- -------------------------
CREATE TABLE FXS_TYPEDEF (
  ID BIGINT NOT NULL,
  ACL BIGINT NOT NULL COMMENT 'ACL for the type, only checked if enabled in permissions',
  DEFACL BIGINT COMMENT 'Optional default ACL for instances',
  WORKFLOW BIGINT NOT NULL,
  NAME VARCHAR(255) NOT NULL COMMENT 'name of the type',
  PARENT BIGINT DEFAULT NULL COMMENT 'parent for derived types, null if this is the parent, cyclic checks have to be performed by the application',
  STORAGE_MODE INTEGER NOT NULL COMMENT 'how are data tables organized \n0=inbound\n1=outbound\n2=external table (no versioning, permissions, etc)\n3=memory (nothing persisted, for small amounts of data only, no query engine available!)',
  CATEGORY INTEGER NOT NULL COMMENT '0=system,  1=user',
  TYPE_MODE INTEGER NOT NULL COMMENT '0=Content, 1=Relation',
  LANG_MODE INTEGER NOT NULL COMMENT '0=no multi language, 1=one language per instance, 2=multiple languages per field',
  TYPE_STATE INTEGER NOT NULL COMMENT '0=available, 1=temporary unavailable, 2=permanently unavailable\ntables can be unavailable if structural changes resulted in errors and manual intervention is needed',
  SECURITY_MODE INTEGER NOT NULL COMMENT 'Bit coded field that indicates which permissions are used. 0=none, 0x01=instance, 0x02=property, 0x04=step, 0x08=type',
  MULTIPLE_CONTENT_ACLS BOOLEAN NOT NULL DEFAULT TRUE COMMENT 'When true, multiple ACLs can be assigned to a content.',
  INSUPERTYPEQUERY BOOLEAN NOT NULL DEFAULT TRUE COMMENT 'When true, this type will be included in supertype queries.',
  TRACKHISTORY BOOLEAN NOT NULL COMMENT 'track changes on instance data? HISTORY_AGE tells for how long they are kept.',
  HISTORY_AGE BIGINT COMMENT 'Days to keep histories for instance changes if TRACKHISTORY is true. 0=for ever',
  MAX_VERSIONS INTEGER NOT NULL COMMENT 'maximum number of versions to keep (if the storage mode supports versions)\n-1 = unlimited\n0 = no versioning\n> 0 = number of versions to keep',
  REL_TOTAL_MAXSRC BIGINT NOT NULL COMMENT 'If not 0 used to override the MAXSRC from FXS_TYPERELS for a total amount',
  REL_TOTAL_MAXDST BIGINT NOT NULL COMMENT 'If not 0 used to override the MAXDST from FXS_TYPERELS for a total amount',
  ICON_REF BIGINT COMMENT 'Optional reference to a content instance for a preview icon',
  CREATED_BY BIGINT NOT NULL,
  CREATED_AT BIGINT NOT NULL,
  MODIFIED_BY BIGINT DEFAULT NULL,
  MODIFIED_AT BIGINT,
  PRIMARY KEY  (ID),
  UNIQUE UK_TYPENAME(NAME),
  FOREIGN KEY (PARENT) REFERENCES FXS_TYPEDEF(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ACL) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (DEFACL) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (WORKFLOW) REFERENCES FXS_WORKFLOWS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_TYPEDEF IS 'Type definitions';

CREATE TABLE FXS_TYPEDEF_T (
  ID BIGINT NOT NULL,
  LANG INTEGER,
  DEFLANG BOOLEAN,
  DESCRIPTION TEXT,
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ID) REFERENCES FXS_TYPEDEF(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_TYPEDEF_T IS 'Type definition translations';

-- ---------------------------------
-- Content Type Relation Definitions
-- ---------------------------------
CREATE TABLE FXS_TYPERELS (
  TYPEDEF BIGINT NOT NULL,
  TYPESRC BIGINT NOT NULL,
  TYPEDST BIGINT NOT NULL,
  MAXSRC BIGINT NOT NULL COMMENT 'Max. number of allowed source entries, unlimited if 0',
  MAXDST BIGINT NOT NULL COMMENT 'Max. number of allowed destination entries, unlimited if 0',
  UNIQUE UK_TYPEREFS(TYPEDEF,TYPESRC,TYPEDST),
  FOREIGN KEY (TYPEDEF) REFERENCES FXS_TYPEDEF(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (TYPESRC) REFERENCES FXS_TYPEDEF(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (TYPEDST) REFERENCES FXS_TYPEDEF(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_TYPERELS IS 'Possible relation definitions';

-- -------------------------
-- Property Groups Definition
-- -------------------------
CREATE TABLE FXS_TYPEGROUPS (
  ID BIGINT NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  DEFMINMULT INTEGER NOT NULL,
  DEFMAXMULT INTEGER NOT NULL,
  MAYOVERRIDEMULT BOOLEAN NOT NULL,
  PRIMARY KEY  (ID)
);
COMMENT ON TABLE FXS_TYPEGROUPS IS 'Type Groups';

CREATE TABLE FXS_TYPEGROUPS_T (
  ID BIGINT NOT NULL,
  LANG INTEGER,
  DESCRIPTION TEXT COMMENT 'Description',
  DESCRIPTION_MLD BOOLEAN NOT NULL DEFAULT FALSE COMMENT 'When true, this is the default language.',
  HINT TEXT COMMENT 'Hint messages for GUIs',
  HINT_MLD BOOLEAN NOT NULL DEFAULT FALSE COMMENT 'When true, this is the default language.',
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ID) REFERENCES FXS_TYPEGROUPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_TYPEGROUPS_T IS 'Type Groups translations';

-- -------------------------
-- Property Datatype Definition
-- -------------------------
CREATE TABLE FXS_DATATYPES (
  TYPECODE BIGINT NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  PRIMARY KEY  (TYPECODE),
  UNIQUE UK_DATATYPES_NAME(NAME)
);
COMMENT ON TABLE FXS_DATATYPES IS 'Datatypes';

CREATE TABLE FXS_DATATYPES_T (
  ID BIGINT NOT NULL,
  LANG INTEGER,
  DEFLANG BOOLEAN,
  DESCRIPTION TEXT,
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ID) REFERENCES FXS_DATATYPES(TYPECODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_DATATYPES_T IS 'Datatypes translations';

-- -------------------------
-- Binary storage
-- -------------------------
CREATE TABLE FX_BINARY (
  ID BIGINT NOT NULL,
  VER INTEGER NOT NULL,
  QUALITY INTEGER NOT NULL,
  FBLOB LONGBLOB,
  NAME VARCHAR(1025) NOT NULL,
  BLOBSIZE BIGINT NOT NULL,
  XMLMETA LONGTEXT COMMENT 'XML Meta Data like IPTC',
  CREATED_AT BIGINT NOT NULL,
  MIMETYPE VARCHAR(256) NOT NULL,
  PREVIEW_REF BIGINT DEFAULT NULL,
  ISIMAGE BOOLEAN NOT NULL,
  RESOLUTION DOUBLE,
  WIDTH INTEGER,
  HEIGHT INTEGER,
  PREV1 LONGBLOB COMMENT 'if image: scaled to fit a 42x42 box, else null',
  PREV2 LONGBLOB COMMENT 'if image: scaled to fit a 85x85 box, else null',
  PREV3 LONGBLOB COMMENT 'if image: scaled to fit a 232x232 box, else null',
  PREV4 LONGBLOB COMMENT 'if image: scaled to fit a 1024x768 box, else null',
  PREV1_WIDTH INTEGER,
  PREV1_HEIGHT INTEGER,
  PREV2_WIDTH INTEGER,
  PREV2_HEIGHT INTEGER,
  PREV3_WIDTH INTEGER,
  PREV3_HEIGHT INTEGER,
  PREV4_WIDTH INTEGER,
  PREV4_HEIGHT INTEGER,
  PREV1SIZE INTEGER,
  PREV2SIZE INTEGER,
  PREV3SIZE INTEGER,
  PREV4SIZE INTEGER,
  MD5SUM VARCHAR(32) DEFAULT 'unknown',
  PRIMARY KEY (ID, VER, QUALITY),
  FOREIGN KEY (PREVIEW_REF) REFERENCES FX_BINARY(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FX_BINARY IS 'Binary Datastore';

CREATE INDEX FXI_BINARY_ID ON FX_BINARY(ID);
CREATE INDEX FXI_BINARY_VER ON FX_BINARY(VER);
CREATE INDEX FXI_BINARY_MIME ON FX_BINARY(MIMETYPE);

-- -------------------------
-- Binary transit table
-- -------------------------
CREATE TABLE FXS_BINARY_TRANSIT (
	BKEY VARCHAR(32) NOT NULL,
    MIMETYPE VARCHAR(256),
	FBLOB LONGBLOB,
	BLOBSIZE BIGINT,
	TFER_DONE BOOLEAN COMMENT 'Data still being transferred or finished?',
	EXPIRE BIGINT NOT NULL,
	PREVIEW_REF BIGINT DEFAULT NULL,
	PREV1 LONGBLOB COMMENT 'if image: scaled to fit a 42x42 box, else null',
    PREV2 LONGBLOB COMMENT 'if image: scaled to fit a 85x85 box, else null',
    PREV3 LONGBLOB COMMENT 'if image: scaled to fit a 232x232 box, else null',
    PREV4 LONGBLOB COMMENT 'if image: scaled to fit a 1024x768 box, else null',
    PREV1_WIDTH INTEGER,
    PREV1_HEIGHT INTEGER,
    PREV2_WIDTH INTEGER,
    PREV2_HEIGHT INTEGER,
    PREV3_WIDTH INTEGER,
    PREV3_HEIGHT INTEGER,
    PREV4_WIDTH INTEGER,
    PREV4_HEIGHT INTEGER,
    PREV1SIZE INTEGER,
    PREV2SIZE INTEGER,
    PREV3SIZE INTEGER,
    PREV4SIZE INTEGER,
	PRIMARY KEY (BKEY),
    FOREIGN KEY (PREVIEW_REF) REFERENCES FX_BINARY(ID)
  	    ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_BINARY_TRANSIT IS 'Binary transit (temporary binary storage)';

CREATE INDEX FXI_BINARY_TR_BKEY ON FXS_BINARY_TRANSIT(BKEY);
CREATE INDEX FXI_BINARY_TR_EXPIRE ON FXS_BINARY_TRANSIT(EXPIRE);

-- -------------------------
-- Selectlists
-- -------------------------
CREATE TABLE FXS_SELECTLIST (
  ID BIGINT NOT NULL,
  PARENTID BIGINT,
  NAME VARCHAR(255) NOT NULL,
  ALLOW_ITEM_CREATE BOOLEAN NOT NULL,
  ACL_CREATE_ITEM BIGINT NOT NULL,
  ACL_ITEM_NEW BIGINT NOT NULL,
  DEFAULT_ITEM BIGINT,
  BCSEP VARCHAR(255) DEFAULT ' > ',
  SAMELVLSELECT BOOLEAN DEFAULT FALSE,
  PRIMARY KEY (ID),
  UNIQUE UK_SELECTLIST_NAME(NAME),
  FOREIGN KEY (PARENTID) REFERENCES FXS_SELECTLIST(ID)
    ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ACL_CREATE_ITEM) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ACL_ITEM_NEW) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_SELECTLIST IS 'Selectlists';

CREATE TABLE FXS_SELECTLIST_T (
  ID BIGINT NOT NULL,
  LANG INTEGER NOT NULL,
  LABEL TEXT COMMENT 'Label for GUIs',
  LABEL_MLD BOOLEAN NOT NULL DEFAULT FALSE COMMENT 'When true, this is the default language.',
  DESCRIPTION TEXT COMMENT 'Description',
  DESCRIPTION_MLD BOOLEAN NOT NULL DEFAULT FALSE COMMENT 'When true, this is the default language.',
  PRIMARY KEY (ID,LANG),
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ID) REFERENCES FXS_SELECTLIST(ID)
    ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_SELECTLIST_T IS 'Selectlist translations';

CREATE TABLE FXS_SELECTLIST_ITEM (
  ID BIGINT NOT NULL,
  ACL BIGINT NOT NULL,
  PARENTID BIGINT,
  LISTID BIGINT NOT NULL,
  NAME VARCHAR(255),
  DATA LONGTEXT,
  COLOR VARCHAR(32) NOT NULL DEFAULT '#000000',
  CREATED_BY BIGINT NOT NULL,
  CREATED_AT BIGINT NOT NULL,
  MODIFIED_BY BIGINT NOT NULL,
  MODIFIED_AT BIGINT NOT NULL,
  DBIN_ID BIGINT,
  DBIN_VER INTEGER,
  DBIN_QUALITY INTEGER,
  POS INTEGER DEFAULT 0,
  PRIMARY KEY (ID),
  UNIQUE UK_SELECTLIST_ITEM(LISTID,NAME),
  FOREIGN KEY (LISTID) REFERENCES FXS_SELECTLIST(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ACL) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (DBIN_ID,DBIN_VER,DBIN_QUALITY) REFERENCES FX_BINARY(ID,VER,QUALITY)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (PARENTID) REFERENCES FXS_SELECTLIST_ITEM(ID)
    ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_SELECTLIST_ITEM IS 'Selectlist Items';

CREATE TABLE FXS_SELECTLIST_ITEM_T (
  ID BIGINT NOT NULL,
  LANG INTEGER NOT NULL,
  DEFLANG BOOLEAN,
  LABEL VARCHAR(255) NOT NULL,
  PRIMARY KEY(LANG,ID),
  FOREIGN KEY (ID) REFERENCES FXS_SELECTLIST_ITEM(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_SELECTLIST_ITEM_T IS 'Selectlist Items translations';

ALTER TABLE FXS_SELECTLIST ADD FOREIGN KEY (DEFAULT_ITEM) REFERENCES FXS_SELECTLIST_ITEM(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT;

-- -------------------------
-- Property Definition
-- -------------------------
CREATE TABLE FXS_TYPEPROPS (
  ID BIGINT NOT NULL,
  SYSINTERNAL BOOLEAN NOT NULL DEFAULT FALSE,
  NAME VARCHAR(50) NOT NULL,
  DEFMINMULT INTEGER NOT NULL,
  DEFMAXMULT INTEGER NOT NULL,
  MAYOVERRIDEMULT BOOLEAN NOT NULL COMMENT 'if true, assignments of this property may override the multiplicity',
  ACL BIGINT NOT NULL,
  MAYOVERRIDEACL BOOLEAN NOT NULL COMMENT 'if true, assignments of this property may override the ACL',
  DATATYPE BIGINT NOT NULL COMMENT 'Data type like integer, string, numeric, etc.',
  REFTYPE BIGINT COMMENT 'For referenced data types the referenced type',
  REFLIST BIGINT COMMENT 'For select list data types the referenced select list',
  ISFULLTEXTINDEXED BOOLEAN NOT NULL COMMENT 'Include in fulltext queries',
  UNIQUEMODE INTEGER NOT NULL DEFAULT 0,
  DEFAULT_VALUE LONGTEXT COMMENT 'Default value serialized to XML',
  PRIMARY KEY (ID),
  UNIQUE UK_TYPEPROPS_NAME(NAME),
  FOREIGN KEY (DATATYPE) REFERENCES FXS_DATATYPES(TYPECODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (REFTYPE) REFERENCES FXS_TYPEDEF(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (REFLIST) REFERENCES FXS_SELECTLIST(ID)
   	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ACL) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_TYPEPROPS IS 'Properties';

CREATE TABLE FXS_TYPEPROPS_T (
  ID BIGINT NOT NULL,
  LANG INTEGER NOT NULL,
  DESCRIPTION TEXT COMMENT 'Description',
  DESCRIPTION_MLD BOOLEAN NOT NULL DEFAULT FALSE COMMENT 'When true, this is the default language.',
  HINT TEXT COMMENT 'Hint messages for GUIs',
  HINT_MLD BOOLEAN NOT NULL DEFAULT FALSE COMMENT 'When true, this is the default language.',
  PRIMARY KEY (ID,LANG),
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ID) REFERENCES FXS_TYPEPROPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_TYPEPROPS_T IS 'Properties translations';

-- -----------------------------
-- Property and Group Assignment
-- -----------------------------
CREATE TABLE FXS_ASSIGNMENTS (
  ID BIGINT NOT NULL COMMENT 'Id of this assignment',
  ATYPE INTEGER NOT NULL COMMENT 'Group (0) or Property (1) assignment',
  ENABLED BOOLEAN NOT NULL COMMENT 'Is this assignment available?',
  TYPEDEF BIGINT NOT NULL COMMENT 'FxType this assignment belongs to',
  MINMULT INTEGER NOT NULL,
  MAXMULT INTEGER NOT NULL,
  DEFMULT INTEGER NOT NULL COMMENT 'Default multiplicity',
  POS INTEGER NOT NULL,
  XPATH VARCHAR(512) NOT NULL,
  XALIAS VARCHAR(50),
  BASE BIGINT COMMENT 'if assigned to a derived type BASE references the same assignment in a parent type, else the assignment to root; if its a root assignment it is 0',
  PARENTGROUP BIGINT NOT NULL COMMENT 'if not 0 the PARENTGROUP is the assignment of the parent group, else it is assigned to the root',
-- Group (ATYPE==0) fields:
  AGROUP BIGINT COMMENT 'assigned group',
  GROUPMODE INTEGER COMMENT '0=any-of, 1=one-of',
-- Property (ATYPE==1) fields:
  APROPERTY BIGINT COMMENT 'assigned property',
  ACL BIGINT,
  DEFLANG INTEGER NOT NULL DEFAULT 0 COMMENT 'Default language if multilingual, 0 (system) if no default set',
  SYSINTERNAL BOOLEAN NOT NULL DEFAULT FALSE,
  DEFAULT_VALUE LONGTEXT COMMENT 'Default value serialized to XML',
  PRIMARY KEY (ID),
  UNIQUE UK_PROPPOSITIONING(TYPEDEF,POS,PARENTGROUP),
  UNIQUE UK_ASSIGNMENTS(TYPEDEF,PARENTGROUP,XALIAS),
  FOREIGN KEY (TYPEDEF) REFERENCES FXS_TYPEDEF(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (PARENTGROUP) REFERENCES FXS_ASSIGNMENTS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (BASE) REFERENCES FXS_ASSIGNMENTS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (AGROUP) REFERENCES FXS_TYPEGROUPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (APROPERTY) REFERENCES FXS_TYPEPROPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (DEFLANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ACL) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_ASSIGNMENTS IS 'Assignment of properties and groups to types/relations';

CREATE TABLE FXS_ASSIGNMENTS_T (
  ID BIGINT NOT NULL,
  LANG INTEGER NOT NULL,
  DESCRIPTION TEXT COMMENT 'Description',
  DESCRIPTION_MLD BOOLEAN NOT NULL DEFAULT FALSE COMMENT 'When true, this is the default language.',
  HINT TEXT COMMENT 'Hint messages for GUIs',
  HINT_MLD BOOLEAN NOT NULL DEFAULT FALSE COMMENT 'When true, this is the default language.',
  PRIMARY KEY (ID,LANG),
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ID) REFERENCES FXS_ASSIGNMENTS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_ASSIGNMENTS_T IS 'Assignments translations';

-- -------------------------
-- TYPE Options
-- -------------------------
CREATE TABLE FXS_TYPE_OPT (
  OPTKEY VARCHAR(32),
  ID BIGINT NOT NULL,
  ISINHERITED BOOLEAN,
  MAYOVERRIDE BOOLEAN,
  OPTVALUE TEXT,
  FOREIGN KEY (ID) REFERENCES FXS_TYPEDEF(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_TYPE_OPT IS 'Options for types';

-- -------------------------
-- Property/Assignment Options
-- -------------------------
CREATE TABLE FXS_PROP_OPT (
  OPTKEY VARCHAR(32),
  ID BIGINT NOT NULL,
  ASSID BIGINT,
  ISINHERITED BOOLEAN,
  MAYOVERRIDE BOOLEAN,
  OPTVALUE TEXT,
  FOREIGN KEY (ID) REFERENCES FXS_TYPEPROPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ASSID) REFERENCES FXS_ASSIGNMENTS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_PROP_OPT IS 'Options for properties/assignments';

-- -------------------------
-- Group/Assignment Options
-- -------------------------
CREATE TABLE FXS_GROUP_OPT (
  OPTKEY VARCHAR(32),
  ID BIGINT NOT NULL,
  ASSID INTEGER,
  ISINHERITED BOOLEAN,
  MAYOVERRIDE BOOLEAN,
  OPTVALUE TEXT,
  FOREIGN KEY (ID) REFERENCES FXS_TYPEGROUPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ASSID) REFERENCES FXS_ASSIGNMENTS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_GROUP_OPT IS 'Options for groups/assignments';

-- -------------------------
-- Main content data
-- -------------------------
CREATE TABLE FX_CONTENT (
  ID BIGINT NOT NULL,
  VER INTEGER NOT NULL,
  REFID BIGINT,
  REFVER INTEGER,
  TDEF BIGINT NOT NULL,
  MANDATOR BIGINT NOT NULL,
  ACL BIGINT NOT NULL,
  STEP BIGINT NOT NULL,
  MAX_VER INTEGER NOT NULL,
  LIVE_VER INTEGER NOT NULL,
  ISMAX_VER BOOLEAN NOT NULL,
  ISLIVE_VER BOOLEAN NOT NULL,
  ISACTIVE BOOLEAN NOT NULL,
  MAINLANG INTEGER NOT NULL,
  RELSRC_ID BIGINT,
  RELSRC_VER INTEGER,
  RELDST_ID BIGINT,
  RELDST_VER INTEGER,
  RELSRC_POS INTEGER,
  RELDST_POS INTEGER,
  CREATED_BY BIGINT NOT NULL,
  CREATED_AT BIGINT NOT NULL,
  MODIFIED_BY BIGINT NOT NULL,
  MODIFIED_AT BIGINT NOT NULL,
  DBIN_ID BIGINT NOT NULL,
  DBIN_VER INTEGER NOT NULL,
  DBIN_QUALITY INTEGER NOT NULL,
  DBIN_ACL BIGINT NOT NULL,
  PRIMARY KEY (ID,VER),
  FOREIGN KEY (MAINLANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (TDEF) REFERENCES FXS_TYPEDEF(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (MANDATOR) REFERENCES FXS_MANDATOR(ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (STEP) REFERENCES FXS_WF_STEPS(ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ACL) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (DBIN_ID,DBIN_VER,DBIN_QUALITY) REFERENCES FX_BINARY(ID,VER,QUALITY)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (DBIN_ACL) REFERENCES FXS_ACL(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FX_CONTENT IS 'Content data main table';

CREATE INDEX FXI_CONTENT_REFID ON FX_CONTENT(REFID);
CREATE INDEX FXI_CONTENT_REFVER ON FX_CONTENT(REFVER);
CREATE INDEX FXI_CONTENT_TDEF ON FX_CONTENT(TDEF);
CREATE INDEX FXI_CONTENT_STEP ON FX_CONTENT(STEP);
CREATE INDEX FXI_CONTENT_MANDATOR ON FX_CONTENT(MANDATOR);
CREATE INDEX FXI_CONTENT_ISMAX_VER ON FX_CONTENT(ISMAX_VER);
CREATE INDEX FXI_CONTENT_ISLIVE_VER ON FX_CONTENT(ISLIVE_VER);
CREATE INDEX FXI_CONTENT_ISACTIVE ON FX_CONTENT(ISACTIVE);
CREATE INDEX FXI_CONTENT_MAINLANG ON FX_CONTENT(MAINLANG);
CREATE INDEX FXI_CONTENT_RELSRC_ID ON FX_CONTENT(RELSRC_ID);
CREATE INDEX FXI_CONTENT_RELDST_ID ON FX_CONTENT(RELDST_ID);
CREATE INDEX FXI_CONTENT_CREATED_BY ON FX_CONTENT(CREATED_BY);
CREATE INDEX FXI_CONTENT_CREATED_AT ON FX_CONTENT(CREATED_AT);
CREATE INDEX FXI_CONTENT_MODIFIED_BY ON FX_CONTENT(MODIFIED_BY);
CREATE INDEX FXI_CONTENT_MODIFIED_AT ON FX_CONTENT(MODIFIED_AT);

-- -------------------------
-- Additional ACLs (2-) for contents.
-- -------------------------
CREATE TABLE FX_CONTENT_ACLS (
  ID BIGINT NOT NULL,
  VER INTEGER NOT NULL,
  ACL BIGINT NOT NULL,

  PRIMARY KEY (ID, VER, ACL),
  FOREIGN KEY (ID,VER) REFERENCES FX_CONTENT(ID,VER)
    ON DELETE CASCADE ON UPDATE RESTRICT,
  FOREIGN KEY (ACL) REFERENCES FXS_ACL(ID)
    ON DELETE RESTRICT ON UPDATE RESTRICT
);

COMMENT ON TABLE FX_CONTENT_ACLS IS 'Additional ACLs for contents';

-- -------------------------
-- Content detail data
-- -------------------------
-- select for correct order: select <data fields> from fx_content_data where <bla> ORDER BY XDEPTH ASC, POS ASC, ASSIGN ASC;
CREATE TABLE FX_CONTENT_DATA (
  ID BIGINT NOT NULL,
  VER INTEGER NOT NULL,
  POS INTEGER COMMENT 'Positioning relative to current hierarchy level maintained by flexive',
  LANG INTEGER NOT NULL,
  TPROP  BIGINT COMMENT 'FXS_TYPEPROPS id unless its a group',
  ASSIGN BIGINT NOT NULL COMMENT 'Id of the assignment',
  XDEPTH INTEGER COMMENT 'XPath hierarchy depth',
  XPATH TEXT NOT NULL,
  XPATHMULT TEXT NOT NULL,
  XMULT VARCHAR(255) NOT NULL COMMENT 'Multiplicities for each element like 1,1,2,5,etc. preceeded by 1 for the root group',
  XINDEX INTEGER NOT NULL COMMENT 'Multiplicity of this element',
  PARENTXMULT VARCHAR(255) NOT NULL COMMENT 'XMULT of the parent group (needed for unique positioning), always 1 for entries in the root group',
  PARENTXPATH TEXT NOT NULL,
  ISMAX_VER BOOLEAN NOT NULL,
  ISLIVE_VER BOOLEAN NOT NULL,
  ISGROUP BOOLEAN NOT NULL,
  ISMLDEF BOOLEAN NOT NULL COMMENT 'Is this field the multilanguage default?',
  FSELECT BIGINT DEFAULT 0,
  FREF BIGINT DEFAULT NULL COMMENT 'Reference to other content instances',
  FDATE1 DATETIME NULL DEFAULT NULL,
  FDATE2 DATETIME NULL DEFAULT NULL,
  FBLOB INTEGER,
  FCLOB LONGTEXT,
  UFCLOB LONGTEXT COMMENT 'Clob with uppercase values',
  FINT INTEGER COMMENT 'Integer and for references',
  FBIGINT BIGINT,
  FTEXT1024 VARCHAR(1024),
  UFTEXT1024 VARCHAR(1024),
  FDOUBLE DOUBLE,
  FFLOAT DOUBLE,
  FBOOL BOOLEAN,
  PRIMARY KEY (ID,VER,LANG,ASSIGN,XMULT,FSELECT),
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (TPROP) REFERENCES FXS_TYPEPROPS(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (FBLOB) REFERENCES FX_BINARY(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ID,VER) REFERENCES FX_CONTENT(ID,VER)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (FSELECT) REFERENCES FXS_SELECTLIST_ITEM(ID)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FX_CONTENT_DATA IS 'Content data detail table';

--  FOREIGN KEY (FREF) REFERENCES FX_CONTENT(ID)
--  	ON DELETE RESTRICT ON UPDATE RESTRICT

-- Special purpose indexes for structure management
CREATE INDEX FXI_CD_ASS ON FX_CONTENT_DATA(ASSIGN);
CREATE INDEX FXI_CD_PRP ON FX_CONTENT_DATA(TPROP);
CREATE INDEX FXI_CD_ASS_XINDEX ON FX_CONTENT_DATA(ASSIGN, XINDEX);
CREATE INDEX FXI_CD_PRP_XINDEX ON FX_CONTENT_DATA(TPROP, XINDEX);

-- Combined indexes for the search
--CREATE INDEX FXI_CONTENT_DATA_LOAD ON FX_CONTENT_DATA(ID,VER,ISGROUP,XPATHMULT);
CREATE INDEX FXI_CD_ASS_FDATE1     ON FX_CONTENT_DATA(ASSIGN,FDATE1);
CREATE INDEX FXI_CD_PRP_FDATE1     ON FX_CONTENT_DATA(TPROP,FDATE1);
CREATE INDEX FXI_CD_ASS_FDATE2     ON FX_CONTENT_DATA(ASSIGN,FDATE2);
CREATE INDEX FXI_CD_PRP_FDATE2     ON FX_CONTENT_DATA(TPROP,FDATE2);
CREATE INDEX FXI_CD_ASS_FINT       ON FX_CONTENT_DATA(ASSIGN,FINT);
CREATE INDEX FXI_CD_PRP_FINT       ON FX_CONTENT_DATA(TPROP,FINT);
CREATE INDEX FXI_CD_ASS_FBIGINT    ON FX_CONTENT_DATA(ASSIGN,FBIGINT);
CREATE INDEX FXI_CD_PRP_FBIGINT    ON FX_CONTENT_DATA(TPROP,FBIGINT);
CREATE INDEX FXI_CD_ASS_FTEXT1024  ON FX_CONTENT_DATA(ASSIGN,FTEXT1024);
CREATE INDEX FXI_CD_PRP_FTEXT1024  ON FX_CONTENT_DATA(TPROP,FTEXT1024);
CREATE INDEX FXI_CD_ASS_UFTEXT1024 ON FX_CONTENT_DATA(ASSIGN,UFTEXT1024);
CREATE INDEX FXI_CD_PRP_UFTEXT1024 ON FX_CONTENT_DATA(TPROP,UFTEXT1024);
CREATE INDEX FXI_CD_ASS_FDOUBLE    ON FX_CONTENT_DATA(ASSIGN,FDOUBLE);
CREATE INDEX FXI_CD_PRP_FDOUBLE    ON FX_CONTENT_DATA(TPROP,FDOUBLE);
CREATE INDEX FXI_CD_ASS_FFLOAT     ON FX_CONTENT_DATA(ASSIGN,FFLOAT);
CREATE INDEX FXI_CD_PRP_FFLOAT     ON FX_CONTENT_DATA(TPROP,FFLOAT);
CREATE INDEX FXI_CD_ASS_FBOOL      ON FX_CONTENT_DATA(ASSIGN,FBOOL);
CREATE INDEX FXI_CD_PRP_FBOOL      ON FX_CONTENT_DATA(TPROP,FBOOL);

CREATE TABLE FX_CONTENT_DATA_FT (
  ID BIGINT NOT NULL,
  VER INTEGER NOT NULL,
  LANG INTEGER NOT NULL,
  ASSIGN BIGINT NOT NULL,
  XMULT VARCHAR(256) NOT NULL COMMENT 'Multiplicities for each element like 1,1,2,5,etc.',
  VALUE LONGTEXT,
--  FULLTEXT(VALUE),
  PRIMARY KEY (ID,VER,LANG,ASSIGN,XMULT),      
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (ID,VER) REFERENCES FX_CONTENT(ID,VER)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FX_CONTENT_DATA_FT IS 'Fulltext content data';


-- TODO: use H2 fulltext engine or rely on flexive's?
-- see http://www.h2database.com/html/tutorial.html#fulltext
-- CREATE ALIAS IF NOT EXISTS FT_INIT FOR "org.h2.fulltext.FullText.init";
-- CALL FT_INIT();
-- CALL FT_CREATE_INDEX('FLEXIVE', 'FX_CONTENT_DATA_FT', 'VALUE');

CREATE INDEX FXI_CONTENT_DATA_FT_ID ON FX_CONTENT_DATA_FT(ID);
CREATE INDEX FXI_CONTENT_DATA_FT_VER ON FX_CONTENT_DATA_FT(VER);
CREATE INDEX FXI_CONTENT_DATA_FT_LANG ON FX_CONTENT_DATA_FT(LANG);
CREATE INDEX FXI_CONTENT_DATA_FT_XMULT ON FX_CONTENT_DATA_FT(XMULT);
CREATE INDEX FXI_CONTENT_DATA_FT_VALUE ON FX_CONTENT_DATA_FT(VALUE);

-- -------------------------
-- Locks
-- -------------------------
CREATE TABLE FXS_LOCK (
  LOCK_ID BIGINT,
  LOCK_VER SMALLINT(6),
  LOCK_RESOURCE VARCHAR(256),
  USER_ID BIGINT NOT NULL,
  LOCKTYPE SMALLINT(6) NOT NULL,
  CREATED_AT BIGINT UNSIGNED NOT NULL,
  EXPIRES_AT BIGINT UNSIGNED NOT NULL,
  FOREIGN KEY (USER_ID) REFERENCES FXS_ACCOUNTS(ID)
		ON DELETE CASCADE ON UPDATE RESTRICT,
  FOREIGN KEY (LOCK_ID,LOCK_VER) REFERENCES FX_CONTENT(ID,VER)
        ON DELETE CASCADE ON UPDATE RESTRICT,
  UNIQUE UK_LOCK_PK(LOCK_ID,LOCK_VER),
  UNIQUE UK_LOCK_RES(LOCK_RESOURCE)
);
COMMENT ON TABLE FXS_LOCK IS 'Locks';
CREATE INDEX FXI_LOCK_USER_ID ON FXS_LOCK(USER_ID);
CREATE INDEX FXI_LOCK_ID ON FXS_LOCK(LOCK_ID);
CREATE INDEX FXI_LOCK_ID_VER ON FXS_LOCK(LOCK_ID, LOCK_VER);
CREATE INDEX FXI_LOCK_RESOURCE ON FXS_LOCK(LOCK_RESOURCE);
CREATE INDEX FXI_LOCK_EXPIRES ON FXS_LOCK(EXPIRES_AT);

-- -------------------------
-- SQL Search
-- -------------------------
CREATE MEMORY TABLE FXS_SEARCHCACHE_MEMORY (
  SEARCH_ID BIGINT NOT NULL,
  ID BIGINT NOT NULL,
  VER INTEGER,
  TDEF BIGINT NOT NULL,
  CREATED_BY BIGINT NOT NULL,
  PRIMARY KEY(SEARCH_ID,ID,VER)
) NOT PERSISTENT;
COMMENT ON TABLE FXS_SEARCHCACHE_MEMORY IS 'memory search result holder';

CREATE TABLE FXS_SEARCHCACHE_PERM (
  SEARCH_ID BIGINT NOT NULL,
  ID  BIGINT NOT NULL,
  VER  INTEGER,
  TDEF BIGINT NOT NULL,
  CREATED_BY BIGINT NOT NULL,
  PRIMARY KEY(SEARCH_ID,ID,VER)
);
COMMENT ON TABLE FXS_SEARCHCACHE_PERM IS 'nontransactional (performance) search result holder';

-- -------------------------
-- Briefcase
-- -------------------------
CREATE TABLE FXS_BRIEFCASE (
  ID BIGINT NOT NULL,
  ICON_ID BIGINT NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  DESCRIPTION TEXT NOT NULL,
  SOURCE_QUERY TEXT ,
  ACL BIGINT,
  MANDATOR BIGINT NOT NULL,
  CREATED_BY BIGINT NOT NULL,
  CREATED_AT BIGINT NOT NULL,
  MODIFIED_BY BIGINT NOT NULL,
  MODIFIED_AT BIGINT NOT NULL,
  PRIMARY KEY(ID),
  FOREIGN KEY (ACL) REFERENCES FXS_ACL(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
  FOREIGN KEY (MANDATOR) REFERENCES FXS_MANDATOR(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_BRIEFCASE IS 'briefcase';

CREATE TABLE FXS_BRIEFCASE_DATA (
  BRIEFCASE_ID BIGINT NOT NULL,
  ID INTEGER NOT NULL,
  POS INTEGER NOT NULL,
  AMOUNT BIGINT NOT NULL,
  METADATA VARCHAR(4096) NULL,
  PRIMARY KEY(BRIEFCASE_ID,ID),
  FOREIGN KEY (BRIEFCASE_ID) REFERENCES FXS_BRIEFCASE(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
--  FOREIGN KEY (ID) REFERENCES FX_CONTENT(ID) ON DELETE CASCADE ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_BRIEFCASE_DATA IS 'briefcase content';

-- -------------------------
-- Scripts table
-- -------------------------
CREATE TABLE FXS_SCRIPTS (
    ID BIGINT NOT NULL,
	SNAME VARCHAR(255) NOT NULL,
	SDESC TEXT,
	SDATA LONGTEXT,
	STYPE INTEGER,
	ACTIVE BOOLEAN NOT NULL,
    IS_CACHED BOOLEAN NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE UK_SCRIPT_NAME(SNAME)
);
COMMENT ON TABLE FXS_SCRIPTS IS 'Scripts';

CREATE INDEX FXI_SCRIPTS_ID ON FXS_SCRIPTS(ID);
CREATE INDEX FXI_SCRIPTS_NAME ON FXS_SCRIPTS(SNAME);
CREATE INDEX FXI_SCRIPTS_TYPE ON FXS_SCRIPTS(STYPE);

-- -------------------------
-- Script schedules table
-- -------------------------
CREATE TABLE FXS_SCRIPT_SCHEDULES (
    ID BIGINT NOT NULL,
	SCRIPT BIGINT NOT NULL,
    SNAME VARCHAR(255),
    ACTIVE BOOLEAN NOT NULL,
	STARTTIME DATETIME NOT NULL,
    ENDTIME DATETIME,
    REPEATINTERVAL BIGINT NOT NULL,
    REPEATTIMES INTEGER NOT NULL,
    CRONSTRING VARCHAR(255),

	PRIMARY KEY (ID),
    FOREIGN KEY (SCRIPT) REFERENCES FXS_SCRIPTS(ID)
  	    ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_SCRIPT_SCHEDULES IS 'Script Schedules';

CREATE INDEX FXS_SCRIPT_SCHEDULES_ID ON FXS_SCRIPT_SCHEDULES(ID);

-- ------------------------------------------
-- Scriptmapping table for assignments
-- ------------------------------------------
CREATE TABLE FXS_SCRIPT_ASS_MAPPING (
    ASSIGNMENT BIGINT NOT NULL,
    SCRIPT BIGINT NOT NULL,
    DERIVED_USAGE BOOLEAN NOT NULL COMMENT 'Use in derived assignments as well?',
	ACTIVE BOOLEAN NOT NULL,
	STYPE INTEGER NOT NULL,
	PRIMARY KEY (ASSIGNMENT,SCRIPT,STYPE),
	FOREIGN KEY (ASSIGNMENT) REFERENCES FXS_ASSIGNMENTS(ID)
  	    ON DELETE CASCADE ON UPDATE RESTRICT,
  	FOREIGN KEY (SCRIPT) REFERENCES FXS_SCRIPTS(ID)
  	    ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_SCRIPT_ASS_MAPPING IS 'Scriptmapping table for assignments';

CREATE INDEX FXI_SCRIPTMAP_ASS_ASSID ON FXS_SCRIPT_ASS_MAPPING(ASSIGNMENT);
CREATE INDEX FXI_SCRIPTMAP_ASS_SCRIPT ON FXS_SCRIPT_ASS_MAPPING(SCRIPT);
CREATE INDEX FXI_SCRIPTMAP_ASS_ACTIVE ON FXS_SCRIPT_ASS_MAPPING(ACTIVE);
CREATE INDEX FXI_SCRIPTMAP_ASS_STYPE ON FXS_SCRIPT_ASS_MAPPING(STYPE);

-- ------------------------------------
-- Scriptmapping table for types
-- ------------------------------------
CREATE TABLE FXS_SCRIPT_TYPE_MAPPING (
    TYPEDEF BIGINT NOT NULL,
    SCRIPT BIGINT NOT NULL,
    DERIVED_USAGE BOOLEAN NOT NULL COMMENT 'Use in derived types as well?',
	ACTIVE BOOLEAN NOT NULL,
	STYPE INTEGER NOT NULL,
	PRIMARY KEY (TYPEDEF,SCRIPT,STYPE),
	FOREIGN KEY (TYPEDEF) REFERENCES FXS_TYPEDEF(ID)
  	    ON DELETE CASCADE ON UPDATE RESTRICT,
  	FOREIGN KEY (SCRIPT) REFERENCES FXS_SCRIPTS(ID)
  	    ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_SCRIPT_TYPE_MAPPING IS 'Scriptmapping table for types';

CREATE INDEX FXI_SCRIPTMAP_TYPE_TYPEDEF ON FXS_SCRIPT_TYPE_MAPPING(TYPEDEF);
CREATE INDEX FXI_SCRIPTMAP_TYPE_SCRIPT  ON FXS_SCRIPT_TYPE_MAPPING(SCRIPT);
CREATE INDEX FXI_SCRIPTMAP_TYPE_ACTIVE  ON FXS_SCRIPT_TYPE_MAPPING(ACTIVE);

-- -------------------------
-- User configuration table
-- -------------------------
CREATE TABLE FXS_USERCONFIGURATION (
	USER_ID BIGINT NOT NULL,
	CPATH VARCHAR(255) NOT NULL,
	CKEY VARCHAR(255) NOT NULL,
	CVALUE LONGTEXT,
    CLASSNAME VARCHAR(255) NULL,
	PRIMARY KEY (USER_ID, CPATH, CKEY),
	FOREIGN KEY (USER_ID) REFERENCES FXS_ACCOUNTS(ID)
		ON DELETE CASCADE ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_USERCONFIGURATION IS 'Per-user configuration table';

-- -------------------------
-- Division configuration table
-- -------------------------
CREATE TABLE FXS_DIVISIONCONFIGURATION (
	CPATH VARCHAR(255) NOT NULL,
	CKEY VARCHAR(255) NOT NULL,
	CVALUE LONGTEXT,
    CLASSNAME VARCHAR(255) NULL,
	PRIMARY KEY (CPATH, CKEY)
);
COMMENT ON TABLE FXS_DIVISIONCONFIGURATION IS 'Global division configuration table';

-- -------------------------
-- Application configuration table
-- -------------------------
CREATE TABLE FXS_APPLICATIONCONFIGURATION (
    APPLICATION_ID VARCHAR(255) NOT NULL,
	CPATH VARCHAR(255) NOT NULL,
	CKEY VARCHAR(255) NOT NULL,
	CVALUE LONGTEXT,
    CLASSNAME VARCHAR(255) NULL,
	PRIMARY KEY (APPLICATION_ID, CPATH, CKEY)
);
COMMENT ON TABLE FXS_APPLICATIONCONFIGURATION IS 'Application configuration table';

-- -------------------------
-- Node configuration table
-- -------------------------
CREATE TABLE FXS_NODECONFIGURATION (
    NODE_ID VARCHAR(255) NOT NULL,
	CPATH VARCHAR(255) NOT NULL,
	CKEY VARCHAR(255) NOT NULL,
	CVALUE LONGTEXT,
    CLASSNAME VARCHAR(255) NULL,
	PRIMARY KEY (NODE_ID, CPATH, CKEY)
);
COMMENT ON TABLE FXS_NODECONFIGURATION IS 'Node configuration table';

-- -------------------------
-- References to FX_CONTENT
-- -------------------------
-- ALTER TABLE FXS_MANDATOR ADD FOREIGN KEY (METADATA) REFERENCES FX_CONTENT (ID)
-- ON DELETE RESTRICT ON UPDATE RESTRICT;

-- ALTER TABLE FXS_TYPEDEF ADD FOREIGN KEY (ICON_REF) REFERENCES FX_CONTENT (ID)
-- ON DELETE RESTRICT ON UPDATE RESTRICT;

-- -------------------------
-- Edit Tree
-- -------------------------
CREATE TABLE FXS_TREE  (
 ID BIGINT NOT NULL,
 NAME VARCHAR(1024) NOT NULL,
 MODIFIED_AT BIGINT NOT NULL,
 DIRTY BOOLEAN NOT NULL,
 PARENT BIGINT,
 DEPTH BIGINT,
 CHILDCOUNT BIGINT NOT NULL,
 REF BIGINT,
 TEMPLATE VARCHAR(2000),
 LFT DECIMAL NOT NULL,
 RGT DECIMAL NOT NULL,
 PRIMARY KEY(ID),
 FOREIGN KEY (parent) REFERENCES FXS_TREE(id)
-- ,
-- FOREIGN KEY (REF) REFERENCES FX_CONTENT(ID)
--  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_TREE IS 'Hierarchical Treestore (Edit)';

CREATE INDEX FXI_TREE_EDIT_LFT ON FXS_TREE(LFT);
CREATE INDEX FXI_TREE_EDIT_RGT ON FXS_TREE(RGT);

-- -------------------------
-- Live Tree
-- -------------------------
CREATE TABLE FXS_TREE_LIVE  (
 ID BIGINT NOT NULL,
 NAME VARCHAR(1024) NOT NULL,
 MODIFIED_AT BIGINT NOT NULL,
 DIRTY BOOLEAN NOT NULL,
 PARENT BIGINT,
 DEPTH BIGINT,
 CHILDCOUNT BIGINT NOT NULL,
 REF BIGINT,
 TEMPLATE VARCHAR(2000),
 LFT DECIMAL NOT NULL,
 RGT DECIMAL NOT NULL,
 PRIMARY KEY(ID),
 FOREIGN KEY (parent) REFERENCES FXS_TREE_LIVE(id)
-- ,
-- FOREIGN KEY (REF) REFERENCES FX_CONTENT(ID)
--  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FXS_TREE_LIVE IS 'Hierarchical Treestore (Live)';

CREATE INDEX FXI_TREE_LIVE_LFT ON FXS_TREE_LIVE(LFT);
CREATE INDEX FXI_TREE_LIVE_RGT ON FXS_TREE_LIVE(RGT);

-- -------------------------
-- RESOURCES
-- -------------------------
CREATE TABLE FX_RES (
  RKEY VARCHAR(50) NOT NULL,
  LANG INTEGER NOT NULL,
  RVAL LONGTEXT NOT NULL,
  PRIMARY KEY(RKEY, LANG),
  FOREIGN KEY (LANG) REFERENCES FXS_LANG(LANG_CODE)
  	ON DELETE RESTRICT ON UPDATE RESTRICT
);
COMMENT ON TABLE FX_RES IS 'Resources';
CREATE INDEX FXI_RES_KEY ON FX_RES(RKEY);