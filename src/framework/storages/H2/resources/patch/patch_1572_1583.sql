-- Patch from v1572 -> v1583
-- Change: FX-581: "Screenview" preview size
-- Author: Markus Plesser (markus.plesser@flexive.com), UCS - unique computing solutions gmbh (http://www.ucs.at)

ALTER TABLE FX_BINARY ADD COLUMN PREV4 LONGBLOB COMMENT 'if image: scaled to fit a 1024x768 box, else null';
ALTER TABLE FX_BINARY ADD COLUMN PREV4_WIDTH INTEGER UNSIGNED;
ALTER TABLE FX_BINARY ADD COLUMN PREV4_HEIGHT INTEGER UNSIGNED;
ALTER TABLE FX_BINARY ADD COLUMN PREV4SIZE INTEGER UNSIGNED;
ALTER TABLE FXS_BINARY_TRANSIT ADD COLUMN PREV4 LONGBLOB COMMENT 'if image: scaled to fit a 1024x768 box, else null';
ALTER TABLE FXS_BINARY_TRANSIT ADD COLUMN PREV4_WIDTH INTEGER UNSIGNED;
ALTER TABLE FXS_BINARY_TRANSIT ADD COLUMN PREV4_HEIGHT INTEGER UNSIGNED;
ALTER TABLE FXS_BINARY_TRANSIT ADD COLUMN PREV4SIZE INTEGER UNSIGNED;
UPDATE FXS_SCRIPTS SET SDATA='/***************************************************************\n *  This file is part of the [fleXive](R) framework.\n *\n *  Copyright (c) 1999-2009\n *  UCS - unique computing solutions gmbh (http://www.ucs.at)\n *  All rights reserved\n *\n *  The [fleXive](R) project is free software; you can redistribute\n *  it and/or modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation.\n *\n *  The GNU Lesser General Public License can be found at\n *  http://www.gnu.org/licenses/lgpl.html.\n *  A copy is found in the textfile LGPL.txt and important notices to the\n *  license from the author are found in LICENSE.txt distributed with\n *  these libraries.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  For further information about UCS - unique computing solutions gmbh,\n *  please see the company website: http://www.ucs.at\n *\n *  For further information about [fleXive](R), please see the\n *  project website: http://www.flexive.org\n *\n *\n *  This copyright notice MUST APPEAR in all copies of the file!\n ***************************************************************/\n\nimport com.flexive.shared.media.FxMediaEngine\nimport com.flexive.shared.media.FxMetadata\nimport com.flexive.shared.media.impl.FxMediaNativeEngine\nimport com.flexive.shared.value.BinaryDescriptor\n\n/*\nParameters:\n===========\n\"boolean processed\",\n\"boolean useDefaultPreview\",\n\"int defaultId\",\n\"String mimeType\",\n\"String metaData\",\n\"File binaryFile\",\n\"File previewFile1\",\n\"File previewFile2\",\n\"File previewFile3\",\n\"File previewFile4\",\n\"int[] dimensionPreview1\",\n\"int[] dimensionPreview2\",\n\"int[] dimensionPreview3\",\n\"int[] dimensionPreview4\"\n*/\nif (processed)\n    return\n\nboolean isImage = mimeType.startsWith(\"image/\")\nif (!isImage)\n    return\n\n//parse metadata\nFxMetadata meta = FxMediaEngine.identify(mimeType, binaryFile)\nmetaData = meta.toXML()\n//create previews\nString ext = \".JPG\"\nif (mimeType.endsWith(\"/png\"))\n    ext = \".PNG\"\nelse if (mimeType.endsWith(\"/gif\"))\n    ext = \".GIF\"\npreviewFile1 = File.createTempFile(\"PREV1\", ext)\npreviewFile2 = File.createTempFile(\"PREV2\", ext)\npreviewFile3 = File.createTempFile(\"PREV3\", ext)\npreviewFile4 = File.createTempFile(\"PREV4\", ext)\nif( meta.asImageMetadata().getWidth() <= 256 && meta.asImageMetadata().getHeight() <= 256 ) {\n    dimensionsPreview1 = FxMediaNativeEngine.scale(binaryFile, previewFile1, ext, BinaryDescriptor.PREVIEW1_BOX, BinaryDescriptor.PREVIEW1_BOX)\n    dimensionsPreview2 = FxMediaNativeEngine.scale(binaryFile, previewFile2, ext, BinaryDescriptor.PREVIEW2_BOX, BinaryDescriptor.PREVIEW2_BOX)\n    dimensionsPreview3 = FxMediaNativeEngine.scale(binaryFile, previewFile3, ext, BinaryDescriptor.PREVIEW3_BOX, BinaryDescriptor.PREVIEW3_BOX)\n    dimensionsPreview4 = FxMediaNativeEngine.scale(binaryFile, previewFile4, ext, BinaryDescriptor.SCREENVIEW_WIDTH, BinaryDescriptor.SCREENVIEW_HEIGHT)\n} else {\n    dimensionsPreview1 = FxMediaEngine.scale(binaryFile, previewFile1, ext, BinaryDescriptor.PREVIEW1_BOX, BinaryDescriptor.PREVIEW1_BOX)\n    dimensionsPreview2 = FxMediaEngine.scale(binaryFile, previewFile2, ext, BinaryDescriptor.PREVIEW2_BOX, BinaryDescriptor.PREVIEW2_BOX)\n    dimensionsPreview3 = FxMediaEngine.scale(binaryFile, previewFile3, ext, BinaryDescriptor.PREVIEW3_BOX, BinaryDescriptor.PREVIEW3_BOX)\n    dimensionsPreview4 = FxMediaEngine.scale(binaryFile, previewFile4, ext, BinaryDescriptor.SCREENVIEW_WIDTH, BinaryDescriptor.SCREENVIEW_HEIGHT)\n}\nprocessed = true\nuseDefaultPreview = false\n//println \"Processed ok!!\"' WHERE SNAME='BinaryProcessor_Images.gy';