<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:fn="http://java.sun.com/jsp/jstl/functions"
      xmlns:t="http://myfaces.apache.org/tomahawk">

Enhances a HTML table with client-side sorting using the YUI DataTable widget.

This is a replacement for the old Dojo sortable tables, thus old dojo-style markup
is supported (e.g. "noSort" and "dataType" header attributes). Simply wrap the old
Dojo table with this widget.

Parameters:
    id - table ID (ID of the contained table element)
    startPage - page number that should be rendered if available
    onPageChange - javascript function to be called if the page changed
    rowsPerPage - number of rows that should be rendered initially

<ui:composition>

    <div id="#{id}_loading">
        <h:graphicImage url="/pub/images/loading.gif"/>
    </div>
    <div id="#{id}_container" style="display:none">
        <ui:insert/>
    </div>

    <c:set var="pageChangeEvent" value=""/>
    <c:if test="#{!empty onPageChange}">
        <c:set var="pageChangeEvent" value="dataTable.configs.paginator.subscribe('pageChange', #{onPageChange});"/>
    </c:if>

    <c:set var="initPage" value=""/>
    <c:if test="#{!empty startPage}">
        <c:set var="initPage" value="dataTable.configs.paginator.setPage(#{startPage});"/>
    </c:if>

    <c:set var="initRowsPerPage" value=""/>
    <c:if test="#{!empty rowsPerPage}">
        <c:set var="initRowsPerPage" value="dataTable.configs.paginator.setRowsPerPage(#{rowsPerPage});"/>
    </c:if>

    <script type="text/javascript">
    <!--
        flexive.yui.require("datatable");
        flexive.yui.onYahooLoaded(function() {
            var htmlTable = YAHOO.util.Dom.get("#{id}");
            var columns = [];
            var dsColumns = [];
            for (var i = 0; i < htmlTable.tHead.rows[0].cells.length; i++) {
                var th = htmlTable.tHead.rows[0].cells[i];
                columns.push({
                    key: "c" + i,
                    label: th.innerHTML,
                    sortable: th.getAttribute("noSort") == null
                });
                dsColumns.push({ key: "c" + i });
            }
            var source = new YAHOO.util.DataSource(htmlTable);
            source.responseType = YAHOO.util.DataSource.TYPE_HTMLTABLE;
            source.responseSchema = {
                fields: dsColumns
            };

            var dataTable = new YAHOO.widget.DataTable("#{id}_container", columns, source,
                { paginator: new YAHOO.widget.Paginator({
                    template : "#{fxMessageBean['ResultTable.label.rowSelect']}",
                    rowsPerPage : 10,
                    rowsPerPageOptions : [10, 25, 50, 100]
                  })
            });
            #{pageChangeEvent}
            #{initRowsPerPage}
            #{initPage}
            dataTable.subscribe("rowMouseoverEvent", dataTable.onEventHighlightRow);
            dataTable.subscribe("rowMouseoutEvent", dataTable.onEventUnhighlightRow);
            document.getElementById("#{id}_loading").style.display = "none";
            document.getElementById("#{id}_container").style.display = "block";
        })
    //-->
    </script>

</ui:composition>


</html>
