<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:fn="http://java.sun.com/jsp/jstl/functions"
      xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
      xmlns:rich="http://richfaces.org/rich"
      xmlns:fx="http://www.flexive.com/jsf/core"
      xmlns:adm="http://www.flexive.com/jsf/admin"
      xmlns:t="http://myfaces.apache.org/tomahawk"
      xmlns:jstl="http://java.sun.com/jsp/jstl/functions"
      xmlns:weblet="http://weblets.dev.java.net/tags_jsp2">

<ui:composition>
       <c:if test="#{empty srcEditor.parseRequestParameters}"> </c:if>
            <t:inputHidden id="editorType" value="#{srcEditor.editorType}" />

            <!-- Content select screen -->
            <ui:fragment rendered="#{srcEditor.initialized==false}">
                <adm:tab label="#{fxMessageBean['Content.tabtitle.chooseType']}" active="true" id="tabChoose"/>
                <t:selectOneListbox size="1" id="type" value="#{srcEditor.type}">
                    <f:selectItems value="#{srcEditor.editableTypes}" />
                </t:selectOneListbox>
                <br/><br/>
                <adm:commandButton labelKey="Content.button.create" location="both"
                                  bean="#{srcEditor}"
                                  icon="save" action="initNew" id="initButton"/>
            </ui:fragment>


            <!-- Content editor screen -->
            <ui:fragment rendered="#{srcEditor.initialized}">
                <c:set var="currentId" value="${srcEditor.id}"/>
                <ui:fragment rendered="#{srcEditor.new}">
                    <adm:tab label="#{fxMessageBean['Content.tabtitle.new']}" active="true" id="tabEditNew"/>
                </ui:fragment>
                <ui:repeat var="srcEditor" value="#{srcEditor}">
                    <ui:fragment rendered="#{!srcEditor.new}">
                        <ui:fragment rendered="#{srcEditor.readOnly}">
                            <adm:tab label="#{fxMessageBean['Content.tabtitle.readonly,#{srcEditor.id},#{srcEditor.version}']}"
                                    active="true" id="tabEditInit1"/>
                        </ui:fragment>
                        <ui:fragment rendered="#{!srcEditor.readOnly}">
                            <adm:tab label="#{fxMessageBean['Content.tabtitle.edit,#{srcEditor.id},#{srcEditor.version}']}"
                                    active="true" id="tabEditInit2"/>
                        </ui:fragment>
                    </ui:fragment>
                </ui:repeat>


                <ui:fragment rendered="#{!srcEditor.new}">
                <div style="display:none;"><iframe id="exportFrame" ><!--empty--></iframe></div>
                <script type="text/javascript">
                    function exportContent(pk) {
                        try {
                            document.getElementById('exportFrame').src = getBase() + "export/content/" + pk;
                        } catch(ex) {
                            alertDialog(ex)
                        }
                    }
                </script>

                <a4j:outputPanel id="infoPanel">
                    <a4j:commandLink reRender="infoPanel" eventsQueue="ceQueue">
                        <f:setPropertyActionListener value="#{srcEditor.infoPanelState=='version'?'':'version'}" target="#{srcEditor.infoPanelState}"/>
                        <span class="infoPanelButton">#{fxMessageBean['Content.field.info']}</span>
                    </a4j:commandLink>&nbsp;
                    <a4j:commandLink reRender="infoPanel" eventsQueue="ceQueue" rendered="#{srcEditor.versionInfo.versionCount > 1}">
                        <f:setPropertyActionListener value="#{srcEditor.infoPanelState=='compare'?'':'compare'}" target="#{srcEditor.infoPanelState}"/>
                        <span class="infoPanelButton">#{fxMessageBean['Content.field.versionCompare']}</span>
                    </a4j:commandLink>
                    <a4j:commandLink reRender="infoPanel" eventsQueue="ceQueue" rendered="#{fxMapBean.types[srcEditor.type].trackHistory}">
                        <f:setPropertyActionListener value="#{srcEditor.infoPanelState=='history'?'':'history'}" target="#{srcEditor.infoPanelState}"/>
                        <span class="infoPanelButton">#{fxMessageBean['Content.field.history']}</span>
                    </a4j:commandLink>
                    <a4j:commandLink reRender="infoPanel" eventsQueue="ceQueue" rendered="#{srcEditor.mayImport}">
                        <f:setPropertyActionListener value="#{srcEditor.infoPanelState=='import'?'':'import'}" target="#{srcEditor.infoPanelState}"/>
                        <span class="infoPanelButton">#{fxMessageBean['Content.field.import']}</span>
                    </a4j:commandLink>
                    <a4j:commandLink reRender="infoPanel" eventsQueue="ceQueue" rendered="#{srcEditor.mayExport}">
                        <f:setPropertyActionListener value="#{srcEditor.infoPanelState=='export'?'':'export'}" target="#{srcEditor.infoPanelState}"/>
                        <span class="infoPanelButton">#{fxMessageBean['Content.field.export']}</span>
                    </a4j:commandLink>
                    <ui:fragment rendered="#{srcEditor.infoPanelState=='import'}">
                        <span class="infoPanel">
                            <h:panelGrid columns="2" columnClasses="top">
                                #{fxMessageBean['Content.field.importUpload']}
                                <t:inputFileUpload id="importUpload"
                                        value="#{srcEditor.importUpload}"
                                        onchange="fileInputChanged();"/>
                                #{fxMessageBean['Content.field.importPaste']}
                                <h:inputTextarea id="importPaste" rows="6" cols="50" value="#{srcEditor.importPasted}" readonly="false"/>
                                #{fxMessageBean['Content.field.importSave']}
                                <h:selectBooleanCheckbox id="importSave" value="#{srcEditor.importSave}"/>
                            </h:panelGrid>
                            <br/>
                            <h:commandLink actionListener="#{srcEditor.doImport}">
                                <span class="infoPanelButton" style="margin: 12px;">#{fxMessageBean['Content.button.import']}</span>
                            </h:commandLink>
                            <br/><br/>
                        </span>
                    </ui:fragment>
                    <ui:fragment rendered="#{srcEditor.infoPanelState=='export'}">
                        <span class="infoPanel">
                            <span class="infoPanelButton" style="margin: 12px; display: block; float: left;" onclick="copy2clipboard(getPreElementContent('exportArea'),'#{fxMessageBean['Global.clipboard.error']}','#{fxMessageBean['Global.clipboard.success']}')">#{fxMessageBean['Content.button.copyToClipboard']}</span>
                            <br clear="all"/>
                            <pre id="exportArea">#{srcEditor.exportData}</pre>
                        </span>
                    </ui:fragment>
                    <ui:fragment rendered="#{srcEditor.infoPanelState=='version'}">
                        <span class="infoPanel"><adm:ceVersionInfo versionInfo="#{srcEditor.versionInfo}"/></span>
                    </ui:fragment>
                    <ui:fragment rendered="#{srcEditor.infoPanelState=='history'}">
                        <span class="infoPanel">
                            #{fxMessageBean['Content.label.history.info']}
                            <table class="historyTable">
                                <tr>
                                    <th>#{fxMessageBean['Content.field.history.dateTime']}</th>
                                    <th>#{fxMessageBean['Content.field.history.version']}</th>
                                    <th>#{fxMessageBean['Content.field.history.account']}</th>
                                    <th>#{fxMessageBean['Content.field.history.host']}</th>
                                    <th>#{fxMessageBean['Content.field.history.application']}</th>
                                </tr>
                                <tr>
                                    <th>&nbsp;</th>
                                    <th class="action" colspan="4">#{fxMessageBean['Content.field.history.action']}</th>
                                </tr>
                            <ui:repeat var="entry" value="#{srcEditor.historyEntries}">
                                <tr>
                                    <td nowrap="nowrap">
                                        #{fxMapBean.dateTime[entry.timestp]}
                                    </td>
                                    <td>
                                        #{entry.contentVersion}
                                    </td>
                                    <td>
                                        #{entry.loginName}
                                    </td>
                                    <td>
                                        #{entry.host}
                                    </td>
                                    <td>
                                        #{entry.application}
                                    </td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td class="action" colspan="4">#{entry.message}</td>
                                </tr>
                            </ui:repeat>

                            </table>
                        </span>
                    </ui:fragment>
                    <ui:fragment rendered="#{srcEditor.infoPanelState=='compare'}">
                        <span class="infoPanel">
                            <table>
                                <tr>
                                    <td>
                                        #{fxMessageBean['Content.field.compare.source']}
                                    </td>
                                    <td>
                                        <h:selectOneListbox id="srcComp" value="#{srcEditor.compareSourceVersion}"
                                                            size="1" required="true">
                                        <f:selectItems value="#{srcEditor.compareVersions}"/>
                                        </h:selectOneListbox>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        #{fxMessageBean['Content.field.compare.destination']}
                                    </td>
                                    <td>
                                        <h:selectOneListbox id="dstComp" value="#{srcEditor.compareDestinationVersion}"
                                                            size="1"
                                                            required="true">
                                            <f:selectItems value="#{srcEditor.compareVersions}"/>
                                        </h:selectOneListbox>
                                    </td>
                                </tr>
                            </table>

                            <a4j:commandLink reRender="comparePanel, infoPanel" eventsQueue="ceQueue" rendered="#{srcEditor.versionInfo.versionCount > 1}">
                                <span class="infoPanelButton">#{fxMessageBean['Content.button.compare']}</span>
                            </a4j:commandLink><br/><br/>
                            <a4j:outputPanel id="comparePanel" rendered="#{srcEditor.compareSourceVersion > 0 and srcEditor.compareDestinationVersion > 0}">
                                <c:set var="compEntries" value="#{srcEditor.compareEntries}"/>
                                #{fxMessageBean['Content.field.compare.changeCount']} #{fn:length(compEntries)}
                                <ui:fragment rendered="#{fn:length(compEntries) > 0}">
                                <table class="changesTable">
                                    <tr>
                                        <th><!-- empty --></th>
                                        <th>#{fxMessageBean['Content.field.compare.xpath']}</th>
                                        <th>#{fxMessageBean['Content.field.compare.source.changes']}</th>
                                        <th>#{fxMessageBean['Content.field.compare.destination.changes']}</th>
                                    </tr>
                                    <ui:repeat var="change" value="#{compEntries}">
                                        <ui:fragment>
                                            <tr>
                                                <td class="changeInfo">
                                                    <ui:fragment
                                                            rendered="#{change.positionChange and change.changeType == 'Update'}">
                                                        <t:graphicImage
                                                                title="Position #{change.originalData.pos} -> #{change.newData.pos}"
                                                                alt="position changed"
                                                                url="/adm/images/contentEditor/change_position.png"/>
                                                    </ui:fragment>
                                                </td>
                                                <td class="changeLeft change#{change.changeType}">#{change.XPath}</td>
                                                <td class="changeMiddle change#{change.changeType}">
                                                    <ui:fragment
                                                            rendered="#{(change.changeType == 'Update' and change.dataChange) or change.changeType == 'Remove'}">
                                                        <div class="changeData">
                                                            <fx:fxValueInput value="#{change.originalData.value}"
                                                                             readOnly="true"/>
                                                        </div>
                                                    </ui:fragment>
                                                </td>
                                                <td class="changeRight change#{change.changeType}">
                                                    <ui:fragment
                                                            rendered="#{(change.changeType == 'Update' and change.dataChange) or change.changeType == 'Add'}">
                                                        <div class="changeData">
                                                            <fx:fxValueInput value="#{change.newData.value}"
                                                                             readOnly="true"/>
                                                        </div>
                                                    </ui:fragment>
                                                </td>
                                            </tr>
                                        </ui:fragment>
                                    </ui:repeat>
                                </table>
                                </ui:fragment>
                            </a4j:outputPanel>
                        </span>
                    </ui:fragment>
                </a4j:outputPanel>
                </ui:fragment>

                    <a4j:outputPanel id="all">

                        <script type="text/javascript">
                            <!--

                            function startUpload(id) {
                                var _iframe = window.frames['fileupload'+id].document;
                                if (_iframe.getElementById('theFile').value=='') {
                                    alertDialog('Please select a file first');
                                } else {
                                    parent.lockScreen();
                                    _iframe.getElementById('myForm').submit();
                                    document.getElementById("uploadInfo"+id).innerHTML='uploading...';
                                }
                            }

                            function uploadFinished() {
                                document.getElementById("frm:storeButton").onclick();
                            }

                            // to identify the content editor from other frames
                            var isContentEditor = true;
                            var isReadOnly = #{srcEditor.readOnly};
                            var form = document.forms["frm"];

                            function addTreeNode(nodeId) {
                                form["frm:treeNodeParent"].value = nodeId;
                                document.getElementById("frm:addTreeNodeButton").onclick();
                            }
                            //-->
                        </script>

                         <!--
                         #{fxMessageBean['Content.field.type']}
                          <ui:fragment rendered="#{not empty srcEditor.typeIcon}">
                            <fx:thumbnail pk="#{srcEditor.typeIcon}" previewSize="original" width="16" height="16"/>
                          </ui:fragment>
                          #{srcEditor.typeDisplay}
                          -->
                        <div class="contentSettings">

                            <div style="float:left;padding-right:50px">
                                <!-- Type name and small type icon -->
                                <fx:formRow labelKey="Content.field.type">
                                    <ui:fragment rendered="#{not empty srcEditor.typeIcon}">
                                        <fx:thumbnail pk="#{srcEditor.typeIcon}" previewSize="original" width="16" height="16"/>
                                    </ui:fragment>
                                    #{srcEditor.typeDisplay}
                                </fx:formRow>

                                <!-- ACL -->
                                <ui:fragment rendered="#{not srcEditor.supportSecurity}">
                                    <em>#{fxMessageBean['Content.msg.noSecurity']}</em>
                                </ui:fragment>
                                <ui:fragment rendered="#{srcEditor.supportSecurity}">
                                    <fx:formRow labelKey="Content.field.ACL" id="acl">
                                         <t:selectOneListbox size="1" id="acl" value="#{srcEditor.acl}"
                                                            converter="SelectableConverter" disabled="#{srcEditor.readOnly==true}">
                                            <f:selectItems value="#{fxSelectBean.contentACLs}"/>
                                        </t:selectOneListbox>
                                    </fx:formRow>
                                </ui:fragment>

                                <!-- wf step -->
                                <fx:formRow labelKey="Content.field.step" id="step">
                                     <t:selectOneListbox size="1" id="step" value="#{srcEditor.step}"
                                                         disabled="#{srcEditor.readOnly==true}">
                                        <f:selectItems value="#{srcEditor.possibleWorkflowSteps}"/>
                                    </t:selectOneListbox>
                                </fx:formRow>
                            </div>
                            <!-- Preview Image -->
                            <ui:fragment rendered="#{srcEditor.content.previewAvailable}">
                                <div class="previewImage">
                                    <div style="padding-top:6px">
                                        <strong>#{fxMessageBean['Content.field.previewImage']}</strong>
                                    </div>
                                    <img src="thumbnail/pk#{srcEditor.id}.#{srcEditor.version}/s2/ts#{fxSystemBean.currentTimeMillis}"
                                         alt="#{fxMessageBean['Content.preview.title']}" title="#{fxMessageBean['Content.preview.title']}"/>
                                </div>
                                <br clear="all"/>
                            </ui:fragment>


                            <fx:formRow labelKey="Content.field.nodes">
                                <adm:ceRenderTreeNodes srcEditor="#{srcEditor}"/>
                            </fx:formRow>
                            <!--ie surrounding div height fix-->
                             <div style="clear:both;height:0px"><!-- __ --></div>
                        </div>

                        <!-- input language switch -->
                        <div class="languageSwitch">
                            <div style="#{srcEditor.readOnly ? 'display:none' : ''}">
                                <fx:formRow labelKey="Content.field.language" id="updateLanguage">
                                    <fx:fxValueInputLanguageSelect id="updateLanguage"/>
                                </fx:formRow>
                            </div>
                        </div>

                        <!-- binary support hack -->
                        <t:inputHidden value="#{srcEditor.editorActionName}"  id="editorActionName"/>
                        <t:inputHidden value="#{srcEditor.editorActionXpath}" id="editorActionXpath"/>

                        <!-- Properties and Groups -->
                        <t:inputHidden value="#{srcEditor.elements}" id="elements"/>
                        <div style="position:relative;left:-10px">
                            <div style="padding-top: 3px; padding-left: 8px; width: 30px; float: left;">
                                <adm:ceRenderFieldMenu group="#{srcEditor.content.rootGroup}" icon="group"
                                                       srcEditor="#{srcEditor}"/>
                            </div>
                            <br clear="all"/>
                            <adm:ceRenderFields data="#{srcEditor.content.rootGroup.children}" srcEditor="#{srcEditor}"/>
                        </div>
                        <ui:repeat value="#{fxSystemBean.groupedFxMessages}" var="msg">
                            <ui:repeat value="#{msg.messages}" var="item">
                                    <script type="text/javascript">
                                        parent.addClientIdWithError(this, '#{item.clientId}', '#{item.detailForJavascript}');
                                    </script>
                            </ui:repeat>
                        </ui:repeat>
                        <script type="text/javascript">
                            parent.renderErrors();

                            if (window._contentEditorPageLoaded) {
                                // init yahoo components after Ajax refresh
                                flexive.yui.load("#{weblet:url('com.flexive.faces.weblets', '/js/yui/yuiloader-min.js')}");
                            }
                            var _contentEditorPageLoaded = true;
                        </script>


                    </a4j:outputPanel>

                <div style="clear:both;height:20px"><!-- __ --></div>

                <ui:fragment rendered="#{srcEditor.readOnly and srcEditor.editAble}">
                    <adm:commandButton labelKey="Content.button.edit" location="both"
                                      bean="#{srcEditor}"
                                      icon="edit" action="enableEdit" id="enableEditButton"
                                      titleKey="Content.button.edit.title"          
                            />
                    <ui:fragment rendered="#{srcEditor.deleteAble}">
                        <adm:commandButton labelKey="Content.button.delete" location="both"
                                           bean="#{srcEditor}" confirmKey="Content.confirm.delete"
                                           icon="delete" action="delete" id="deleteButtonRO"
                                           titleKey="Content.button.delete.title"/>
                    </ui:fragment>
                    <ui:fragment rendered="#{srcEditor.versionDeleteAble}">
                        <adm:commandButton labelKey="Content.button.deleteVersion" location="both"
                                           bean="#{srcEditor}" confirmKey="Content.confirm.deleteVersion"
                                           icon="deleteVersion" action="deleteCurrentVersion" id="deleteVersionButtonRO"
                                           titleKey="Content.button.deleteVersion.title"/>
                    </ui:fragment>
                </ui:fragment>
                <ui:fragment rendered="#{srcEditor.readOnly==false}">
                    <!--
                    <adm:commandButton label="Content.button.saveInSession" location="both"
                                      bean="#{srcEditor}"
                                      icon="saveInSession" action="saveInSession" id="storeButton"/>
                                      -->

                    <ui:fragment rendered="#{srcEditor.new}">
                        <adm:commandButton labelKey="Content.button.create" location="both"
                                          bean="#{srcEditor}"
                                          icon="new" action="save" id="createButton" onclick="preSubmit()"/>
                    </ui:fragment>

                    <ui:fragment rendered="#{srcEditor.new==false}">
                        <adm:commandButton labelKey="Content.button.save" location="both"
                                          bean="#{srcEditor}"
                                          icon="save" action="save" id="saveButton" onclick="preSubmit()"/>

                        <adm:commandButton labelKey="Content.button.saveInNewVersion" location="both"
                                          bean="#{srcEditor}"
                                          icon="newVersion" action="saveInNewVersion" id="saveInNewVersionButton"
                                          titleKey="Content.button.saveInNewVersion.title"
                                          onclick="preSubmit()"/>

                        <adm:commandButton labelKey="Content.button.refresh" location="both"
                                          bean="#{srcEditor}" confirmKey="Content.confirm.refresh"
                                          icon="reload" action="reload" id="reloadButton" onclick="preSubmit()"/>

                        <ui:fragment rendered="#{srcEditor.deleteAble}">
                            <adm:commandButton labelKey="Content.button.delete" location="both"
                                          bean="#{srcEditor}" confirmKey="Content.confirm.delete"
                                          icon="delete" action="delete" id="deleteButton" onclick="preSubmit()"
                                          titleKey="Content.button.delete.title"/>
                        </ui:fragment>
                        <ui:fragment rendered="#{srcEditor.versionDeleteAble}">
                            <adm:commandButton labelKey="Content.button.deleteVersion" location="both"
                                          bean="#{srcEditor}" confirmKey="Content.confirm.deleteVersion"
                                          icon="deleteVersion" action="deleteCurrentVersion" id="deleteVersionButton"
                                          titleKey="Content.button.deleteVersion.title"
                                          onclick="preSubmit()"/>
                        </ui:fragment>
                    </ui:fragment>


                    <adm:commandButton labelKey="Content.button.compact" location="toolbar"
                                      bean="#{srcEditor}" separator="before"
                                      icon="compact" action="compact" id="compactButton" onclick="preSubmit()"
                                      titleKey="Content.button.compact.title"/>

                    <adm:commandButton labelKey="Content.button.cancel" location="both"
                                      bean="#{srcEditor}" confirmKey="Content.confirm.abort"
                                      icon="cancel" action="cancel" id="cancelButton" onclick="preSubmit()"/>
                </ui:fragment>
                <ui:fragment rendered="#{!srcEditor.new and srcEditor.mayExport}">
                    <adm:commandButton labelKey="Content.button.export" location="toolbar" lockscreen="false"
                                       icon="export" separator="before"
                                       onclick="exportContent('#{srcEditor.pk}');return false;"
                                       id="exportButton"/>
                </ui:fragment>
            </ui:fragment>
</ui:composition>


</html>
