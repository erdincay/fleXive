<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:t="http://myfaces.apache.org/tomahawk"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
      xmlns:adm="http://www.flexive.com/jsf/admin"
      xmlns:fx="http://www.flexive.com/jsf/core">
<body>

<ui:composition template="/adm/contentTemplate.xhtml">

<ui:define name="head">
    <script type="text/javascript">
            function toggleBriefcase(element) {
            var bd = document.getElementById("frm:briefcaseData");
            if (element.checked) {
            bd.style.display='inline';
            } else {
            bd.style.display='none';
            }
            }
    </script>
</ui:define>

<ui:define name="body">

<h:form id="frm">

    <adm:tab label="#{fxMessageBean['SqlSearch.fxsql.tabtitle.query']}" active="true" id="tab1"/>

    <a4j:region>
        <div style="width: 95%">
            <fx:resizeable>
                <h:inputTextarea id="query" value="#{sqlSearchBean.query}" style="width:100%; height: 100%" rows="10"/>
            </fx:resizeable>
        </div>
        <br/>
        <h:panelGroup id="briefcaseSettings">
    <!--
            <fx:formRow label="Cache Mode" id="cacheMode">
                <h:selectOneListbox id="cacheMode" value="#{sqlSearchBean.cacheMode}" size="1" required="true">
                    <f:selectItems value="#{sqlSearchBean.cacheModes}" />
                </h:selectOneListbox>
            </fx:formRow>
    -->
            <fx:formRow label="#{fxMessageBean['SqlSearch.fxsql.field.createBriefcase']}" id="createBriefcase">
                <t:selectBooleanCheckbox id="createBriefcase" value="#{sqlSearchBean.createBriefcase}"
                                         onclick="toggleBriefcase(this)"/>
            </fx:formRow>

            <h:panelGroup id="briefcaseData" style="display:none">
                <fx:formRow labelKey="SqlSearch.fxsql.field.briefcaseName" id="briefcaseName" >
                    <t:inputText id="briefcaseName" value="#{sqlSearchBean.briefcaseName}"/>
                </fx:formRow>
                <fx:formRow labelKey="SqlSearch.fxsql.field.briefcaseDescription" id="briefcaseDescription" width="500">
                    <t:inputText id="briefcaseDescription" value="#{sqlSearchBean.briefcaseDescription}"
                                 style="width:350px"/>
                </fx:formRow>
                <fx:formRow labelKey="SqlSearch.fxsql.field.briefcaseShared" id="briefcaseACL" width="500" heigth="100">
                    <h:selectOneListbox id="briefcaseACL" value="#{sqlSearchBean.briefcaseAclId}" size="1">
                        <f:selectItem itemValue="-1" itemLabel=""/>
                        <f:selectItems value="#{fxSelectBean.briefcaseACLs}" />
                    </h:selectOneListbox>
                </fx:formRow>
            </h:panelGroup>

        </h:panelGroup>

        <span style="clear:both;"/>

        <adm:commandButton labelKey="SqlSearch.button.start" location="both" icon="search"
                          bean="#{sqlSearchBean}" action="executeSearch" id="sqlSearchButton"/>
        <adm:shortcut elementId="frm:sqlSearchButton"/>

        <br/><br/><br/><br/>
        <c:if test="#{sqlSearchBean.queryResult!=null}">
                    <span style="color:#bdbdbd">
                    #{fxMessageBean['SqlSearch.fxsql.result.field.entries']} #{sqlSearchBean.queryResult.rowCount} /
                    #{fxMessageBean['SqlSearch.fxsql.result.field.total']} #{sqlSearchBean.queryResult.totalRowCount},
                    #{fxMessageBean['SqlSearch.fxsql.result.field.truncated']} #{sqlSearchBean.queryResult.truncated},
                    #{fxMessageBean['SqlSearch.fxsql.result.field.parserTime']} #{sqlSearchBean.queryResult.parserExecutionTime},
                    #{fxMessageBean['SqlSearch.fxsql.result.field.searchTime']} #{sqlSearchBean.queryResult.dbSearchTime},
                    #{fxMessageBean['SqlSearch.fxsql.result.field.fetchTime']} #{sqlSearchBean.queryResult.fetchTime},
                    #{fxMessageBean['SqlSearch.fxsql.result.field.totalTime']} #{sqlSearchBean.queryResult.totalTime}<br/>
                    </span>
            <h:selectOneListbox value="#{sqlSearchBean.viewType}" size="1">
                <f:selectItems value="#{fxSelectBean.resultViewTypes}"/>
                <a4j:support event="onchange" action="#{sqlSearchBean.executeSearch}"
                             reRender="refreshResults"/>
            </h:selectOneListbox>

            <a4j:commandButton id="refreshButton" action="#{sqlSearchBean.executeSearch}"
                               style="display:none" reRender="refreshResults"/>

            <div id="resultContainer">
                <fx:resultTable var="resultTable" value="#{sqlSearchBean.queryResult}"/>
            </div>

        </c:if>
        <a4j:outputPanel id="refreshResults">
            <fx:resultTableUpdater var="resultTable" value="#{sqlSearchBean.queryResult}"/>
        </a4j:outputPanel>

        <fx:menu name="resultsMenu" beforeShow="onShowContextMenu" clickHandler="onContextMenu" trigger="'resultContainer'">
            <fx:menuItem id="show" labelKey="SearchResult.menu.show" icon="open"/>
            <fx:menuItem id="edit" labelKey="SearchResult.menu.edit" icon="edit"/>
            <fx:menuItem id="delete" labelKey="SearchResult.menu.delete" icon="remove"/>
            <fx:menuItem id="deleteSelected" labelKey="SearchResult.menu.deleteSelected" icon="remove"/>
        </fx:menu>

        <script type="text/javascript">
        <!--
            function onShowContextMenu() {
                try {
                    var selectedPks = flexive.yui.datatable.getSelectedPks(resultTable);
                    flexive.yui.setMenuItem("deleteSelected", "disabled", selectedPks.length == 0);
                } catch (e) {
                    alertDialog(e);
                }
            }

            function onContextMenu(type, args) {
                // extract PK
                try {
                    var pk = flexive.yui.datatable.getPk(resultTable, this.contextEventTarget);
                } catch (e) {
                    alertDialog("#{fxMessageBean['SqlSearch.dialog.menu.noPk']}");
                    return;
                }

                var selectedPks = flexive.yui.datatable.getSelectedPks(resultTable)
                var menuItem = args[1];
                if (menuItem.cfg.getProperty("disabled")) {
                    return;
                }
                switch (menuItem.id) {
                    case "edit":
                        invokeContentAction("adm/content/contentEditor.jsf", "editInstance", {pk: pk.toString(), readOnly: false});
                        break;
                    case "show":
                        invokeContentAction("adm/content/contentEditor.jsf", "editInstance", {pk: pk.toString(), readOnly: true});
                        break;
                    case "delete":
                        confirmDialog("#{fxMessageBean['SearchResult.dialog.confirm.deleteRow']}", function() {
                            try {
                                flexive.util.getJsonRpc().ContentEditor.remove(pk.id);
                                reload();
                            } catch (e) {
                                alertDialog(e);
                            }
                        });
                        break;
                    case "deleteSelected":
                        confirmDialog("#{fxMessageBean['SearchResult.dialog.confirm.deleteSelection']}", function() {
                            try {
                                flexive.util.getJsonRpc().ContentEditor.removeMultiple(
                                        flexive.util.getPkIds(selectedPks)
                                );
                                reload();
                            } catch (e) {
                                alertDialog(e);
                            }
                        });
                        break;
                    default:
                }
            }

            function reload() {
                document.getElementById("frm:refreshButton").onclick();
            }

            document.getElementById("frm:query").focus();
        //-->
        </script>

    </a4j:region>

    <adm:toolbarPluginButtons/>
</h:form>
<br/>
</ui:define>

</ui:composition>

</body>
</html>
