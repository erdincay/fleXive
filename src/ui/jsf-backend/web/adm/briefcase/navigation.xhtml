<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:fn="http://java.sun.com/jsp/jstl/functions"
      xmlns:fx="http://www.flexive.com/jsf/core"
      xmlns:adm="http://www.flexive.com/jsf/admin"
      xmlns:t="http://myfaces.apache.org/tomahawk">

<ui:composition template="/adm/templates/navigation.xhtml">
    <ui:define name="head">
        <script type="text/javascript" src="#{fxSystemBean.contextPath}/adm/js/#{adm:versionedUrl('briefcasePanel.js')}"/>
        <script type="text/javascript" src="#{fxSystemBean.contextPath}/adm/js/#{adm:versionedUrl('searchQueryPanel.js')}"/>
        <script type="text/javascript">
        <!--
            // search query methods

            // briefcase methods
            var activeItem = null;
            var contextBriefcaseId = null;
            var contextBriefcaseName = null;
            var contextQueryName = null;

            // Called when this page is brought to the foreground by parent.gotoNavMenu
            function onShow() {
                reload();
            }

            function selectBriefcase(caller) {
                if (activeItem!=null) {
                    if (activeItem.src.indexOf("shared")==-1) {
                        activeItem.src=document.getElementById("mainNavForm:normal").src;
                    } else {
                        activeItem.src=document.getElementById("mainNavForm:normalShared").src;
                    }
                }
                activeItem = parent.getFirstMatchingElement(caller,"IMG");
                if (activeItem.src.indexOf("shared")==-1) {
                    activeItem.src=document.getElementById("mainNavForm:active").src;
                } else {
                    activeItem.src=document.getElementById("mainNavForm:activeShared").src;
                }                                           
            }

            function showBriefcase(id) {
                invokeContentAction('adm/search/searchResult.jsf', 'openBriefcase', {briefcaseId: id});
            }


            function createBriefcase() {
                promptDialog("#{fxMessageBean['Briefcase.dialog.prompt.briefcaseName']}", "#{fxMessageBean['Briefcase.dialog.prompt.briefcaseName.default']}",
                        function (name) {
                            if (name == null || name.length == 0) {
                                return;
                            }
                            try {
                                flexive.util.getJsonRpc().BriefcaseEditor.create(name);
                                briefcasePanel.reload();
                            } catch (e) {
                                alertDialog(e.message);
                            }
                        }
                );
            }

            // =========== context menu functions =================

            function showContextMenu() {
                var selectionAvailable = !parent.getContentClipboard().isEmpty();
                contextBriefcaseId = null;
                contextBriefcaseName = null;
                getContextBriefcaseName();  // force initialization of briefcase name (IE workaround)
                findMenuItem(getContextMenu(), "open").setDisabled(getContextBriefcaseId() == -1);
                findMenuItem(getContextMenu(), "delete").setDisabled(getContextBriefcaseId() == -1);
                findMenuItem(getContextMenu(), "addSelection").setDisabled(!selectionAvailable);
                getContextMenu().show_();
            }

            function showQueryContextMenu() {
                contextQueryName = null;
                getContextQueryName();
                getQueryContextMenu().show_();
            }

            function openBriefcase(menuItem) {
                showBriefcase(getContextBriefcaseId());
            }

            function openBriefcaseDetails(menuItem) {
                invokeContentAction("adm/briefcase/detail.jsf", "openBriefcaseDetails", {briefcaseId: getContextBriefcaseId()});
            }

            function deleteBriefcase(menuItem) {
                confirmDialog("#{fxMessageBean['Briefcase.dialog.confirm.delete']}",
                    function() {
                        try {
                            flexive.util.getJsonRpc().BriefcaseEditor.remove(getContextBriefcaseId());
                            briefcasePanel.reload();
                        } catch (e) {
                            alertDialog(e.message);
                        }
                    }
                );
            }

            function addSelection(menuItem) {
                try {
                    // clone clipboard array, otherwise JSON/RPC won't recognize it as an array
                    // since it was created in another frame
                    var ids = [];
                    var clipboardIds = parent.getContentClipboard().get();
                    for (var i = 0; i < clipboardIds.length; i++) {
                        ids.push(clipboardIds[i]);
                    }
                    flexive.util.getJsonRpc().BriefcaseEditor.add(getContextBriefcaseId(), ids);
                    parent.getContentClipboard().clear();
                    parent.showStatusMessage(
                            "#{fxMessageBean['Briefcase.status.addedSelection']}"
                            .replace("{0}", ids.length)
                            .replace("{1}", getContextBriefcaseName())
                    );
                    briefcasePanel.reload();
                } catch (e) {
                    alertDialog(e.message);
                }
            }

            function renameBriefcase(menuItem) {
                promptDialog("#{fxMessageBean['Briefcase.dialog.prompt.briefcaseName']}", "", function(newName) {
                    if (newName == null || newName.length == 0) {
                        return;
                    }
                    try {
                        flexive.util.getJsonRpc().BriefcaseEditor.rename(getContextBriefcaseId(), newName);
                        briefcasePanel.reload();
                    } catch (e) {
                        alertDialog(e.message);
                    }
                });
            }

            function shareBriefcase(menuItem, aclId) {
                try {
                    flexive.util.getJsonRpc().BriefcaseEditor.share(getContextBriefcaseId(), aclId);
                    briefcasePanel.reload();
                } catch (e) {
                    alertDialog(e.message);
                }
            }
                    
            function getContextMenu() {
                return dojo.widget.byId("contextMenu");
            }

            // Returns the briefcase ID where the context menu was opened
            function getContextBriefcaseId() {
                if (contextBriefcaseId == null) {
                    var parent = findParentWithAttribute(getContextMenu().openEvent, "briefcaseId");
                    contextBriefcaseId = parent != null ? parent.getAttribute("briefcaseId") : -1;
                }
                return contextBriefcaseId;
            }

            // Returns the briefcase name where the context menu was opened
            function getContextBriefcaseName() {
                if (contextBriefcaseName == null) {
                    var parent = findParentWithAttribute(getContextMenu().openEvent, "briefcaseName");
                    contextBriefcaseName = parent != null ? parent.getAttribute("briefcaseName") : null;
                }
                return contextBriefcaseName;
            }

            // create a new search query
            function createQuery() {
                invokeContentAction("adm/search/query.jsf", "new");
            }

            // open the FxSQL console
            function createSqlQuery() {
                loadContentPage("adm/main/sqlsearch/search.jsf");
            }

            // open an existing query
            function openQuery(name) {
                invokeContentAction("adm/search/query.jsf", "load", {"name": name});
            }

            // open the query via context menu
            function openContextQuery(name) {
                openQuery(getContextQueryName());
            }

            // delete a query
            function deleteQuery(menuItem) {
                confirmDialog("#{fxMessageBean['SearchQueries.dialog.confirm.delete']}", function() {
                    try {
                        flexive.util.getJsonRpc().SearchQueryEditor.remove(getContextQueryName());
                        queryPanel.reload();
                    } catch (e) {
                        alertDialog(e.message);
                    }
                });
            }

            function getQueryContextMenu() {
                return dojo.widget.byId("queryContextMenu");
            }

            function getContextQueryName() {
                if (contextQueryName == null) {
                    var parent = findParentWithAttribute(getQueryContextMenu().openEvent, "queryName");
                    contextQueryName = parent != null ? parent.getAttribute("queryName") : null;
                }
                return contextQueryName;
            }

            // ============ initialize the panels =====================

            var briefcasePanel;
            var queryPanel;
            dojo.addOnLoad(function() {
                briefcasePanel = new BriefcasePanel(document.getElementById("briefcaseContainer"), "showBriefcase");
                briefcasePanel.reload();
                queryPanel = new SearchQueryPanel(document.getElementById("queryContainer"), "openQuery");
                queryPanel.reload();
            });

            function reload() {
                briefcasePanel.reload();
                queryPanel.reload();
            }
        //-->
        </script>
    </ui:define>
    <ui:define name="content">
        <adm:messages disableErrorRegistration="true"/>

        <h5>
            #{fxMessageBean['SearchQueries.label.overview']}
            (<a href="javascript:createQuery()">#{fxMessageBean['SearchQueries.button.new']}</a>)
        </h5>

        <div id="queryContainer">

        </div>

        <br clear="all"/>
        
        <h5>
            #{fxMessageBean['Briefcase.label.briefcases']}
            (<a href="javascript:createBriefcase()">#{fxMessageBean['Briefcase.button.create']}</a>)
        </h5>

        <div id="briefcaseContainer">

        </div>

        <fx:dojoMenu name="contextMenu" contextMenuTarget="briefcaseContainer" showHandler="showContextMenu">
            <fx:dojoMenuItem id="open" icon="open" labelKey="Briefcase.contextMenu.open" clickHandler="openBriefcase"/>
            <fx:dojoMenuItem id="openDetails" icon="openDetails" labelKey="Briefcase.contextMenu.openDetails" clickHandler="openBriefcaseDetails"/>
            <fx:dojoMenuItem id="rename" icon="rename" labelKey="Briefcase.contextMenu.rename" clickHandler="renameBriefcase"/>
            <fx:dojoMenuItem id="delete" icon="remove" labelKey="Briefcase.contextMenu.delete" clickHandler="deleteBriefcase"/>
            <fx:dojoMenuSeparator/>
            <fx:dojoMenuItem id="addSelection" icon="paste" labelKey="Briefcase.contextMenu.addSelection" clickHandler="addSelection"/>
            <fx:dojoMenuItem id="share" icon="share" labelKey="Briefcase.contextMenu.share" clickHandler="shareBriefcase">
                <fx:dojoMenuItem id="unshare" labelKey="Briefcase.contextMenu.private" clickHandler="function(menuItem) { shareBriefcase(menuItem, -1); }"/>
                <c:forEach var="item" items="#{fxSelectBean.briefcaseACLs}">
                    <fx:dojoMenuItem id="share#{item.value}" label="#{item.label}"
                             clickHandler="function(menuItem) { shareBriefcase(menuItem, #{item.value}); }"/>
                </c:forEach>
            </fx:dojoMenuItem>
            <fx:dojoMenuSeparator/>
            <fx:dojoMenuItem id="createBriefcase" icon="createBriefcase" labelKey="Briefcase.menu.create" clickHandler="createBriefcase"/>
        </fx:dojoMenu>

        <fx:dojoMenu name="queryContextMenu" contextMenuTarget="queryContainer" showHandler="showQueryContextMenu">
            <fx:dojoMenuItem id="open" icon="open" labelKey="SearchQueries.contextMenu.open" clickHandler="openContextQuery"/>
            <fx:dojoMenuItem id="delete" icon="remove" labelKey="SearchQueries.contextMenu.delete" clickHandler="deleteQuery"/>
        </fx:dojoMenu>

        <div style="display:none">
            <t:graphicImage url="/adm/images/briefcaseIcons/normal_shared.gif" id="normalShared"/>
            <t:graphicImage url="/adm/images/briefcaseIcons/normal.gif" id="normal"/>
            <t:graphicImage url="/adm/images/briefcaseIcons/active_shared.gif" id="activeShared"/>
            <t:graphicImage url="/adm/images/briefcaseIcons/active.gif" id="active"/>
        </div>
    </ui:define>

    <ui:define name="mainMenu">
        <div class="menu">
        <fx:dojoMenu name="mainMenu">
            <fx:dojoMenuItem id="createQuery" icon="query" labelKey="Briefcase.menu.createQuery" clickHandler="createQuery"/>
            <fx:dojoMenuItem id="createBriefcase" icon="createBriefcase" labelKey="Briefcase.menu.create" clickHandler="createBriefcase"/>
            <fx:dojoMenuItem id="sqlQuery" labelKey="Briefcase.menu.createSqlQuery" clickHandler="createSqlQuery"/>

            <fx:dojoMenuSeparator/>

            <ui:include src="/adm/templates/navigation.menu.tabs.xhtml"/>
        </fx:dojoMenu>


        </div>
    </ui:define>

    <ui:define name="reloadButton">
        <a href="javascript:reload()"><t:graphicImage url="/adm/images/layout/reload.png" alt="reload" style="position:absolute;right:15px;margin-top:2px;border:0;"/></a>
    </ui:define>
</ui:composition>


</html>
