<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:t="http://myfaces.apache.org/tomahawk"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
      xmlns:adm="http://www.flexive.com/jsf/admin"
      xmlns:fx="http://www.flexive.com/jsf/core"
      xmlns:weblet="http://weblets.dev.java.net/tags_jsp2">
<body>

<ui:composition template="/adm/contentTemplate.xhtml">
    <ui:define name="head">
        <script type="text/javascript" src="#{fxSystemBean.contextPath}/pub/js/selection.js"> </script>
        <script type="text/javascript" src="#{weblet:url('com.flexive.faces.weblets','/js/lytebox.js')}"/>
    </ui:define>

    <ui:define name="body">
        <c:if test="#{empty fxSearchResultBean.parseRequestParameters}"> </c:if>
        <a4j:form id="frm">
            <h:inputHidden value="#{fxSearchResultBean.viewType}"/>

            <adm:resultTabs activeTab="results"/>

            <adm:commandButton id="listButton" labelKey="SearchResult.button.view.list" bean="#{fxSearchResultBean}" action="listView" icon="view_list" location="toolbar"/>
            <adm:commandButton id="thumbsButton" labelKey="SearchResult.button.view.thumbs" bean="#{fxSearchResultBean}" action="thumbView" icon="view_thumbs" location="toolbar"/>
            <adm:commandButton id="preferencesButton" location="toolbar" labelKey="ResultPreferences.button.open" bean="#{resultPreferencesBean}" action="show" icon="configure"/>

            <script type="text/javascript">
            <!--
                function onShowContextMenu() {
                    try {
                        var perms = flexive.yui.datatable.getPermissions(resultTable, this.contextEventTarget);
                        var selectedIds = getSelectedIds();
                        var briefcaseId = getBriefcaseId();
                        flexive.yui.setMenuItem("deleteSelected", "disabled", selectedIds.length == 0 || !perms["delete"]);
                        flexive.yui.setMenuItem("copy", "disabled", selectedIds.length == 0);
                        flexive.yui.setMenuItem("deleteBriefcaseSelected", "disabled", briefcaseId == -1 || selectedIds.length == 0);
                        flexive.yui.setMenuItem("deleteBriefcase", "disabled", briefcaseId == -1);
                        flexive.yui.setMenuItem("edit", "disabled", !perms.edit);
                        flexive.yui.setMenuItem("delete", "disabled", !perms["delete"]);
                    } catch (e) {
                        alertDialog(e);
                    }
                }

                function getSelectedIds() {
                    return flexive.util.getPkIds(flexive.yui.datatable.getSelectedPks(resultTable));
                }

                function getBriefcaseId() {
                    return #{empty fxSearchResultBean.briefcase ? -1 : fxSearchResultBean.briefcase.id};
                }

                function onContextMenu(type, args) {
                    // extract PK
                    var pk = flexive.yui.datatable.getPk(resultTable, this.contextEventTarget);
                    document.getElementById("frm:contentEditorId").value = pk.id;
                    document.getElementById("frm:contentEditorVersion").value = pk.version;

                    var selectedIds = getSelectedIds();
                    var briefcaseId = getBriefcaseId();
                    var menuItem = args[1];
                    if (menuItem.cfg.getProperty("disabled")) {
                        return;
                    }
                    switch (menuItem.id) {
                        case "show":
                            document.getElementById("frm:showButton").onclick();
                            break;
                        case "edit":
                            document.getElementById("frm:editButton").onclick();
                            break;
                        case "showScreenview":
                            var a = document.createElement("a");
                            a.href = getBase()+"thumbnail/pk" + pk.id + "." + pk.version + "/so";
                            a.rel = "lytebox";
                            a.title = "Screenview " + pk.id + "." + pk.version;
                            myLytebox.start(a, false, false);
                            break;
                        case "copy":
                            parent.getContentClipboard().set(selectedIds);
                            break;
                        case "delete":
                            confirmDialog("#{fxMessageBean['SearchResult.dialog.confirm.deleteRow']}", function() {
                                try {
                                    flexive.util.getJsonRpc().ContentEditor.remove(pk.id);
                                    reload();
                                } catch (e) {
                                    alertDialog(e);
                                }
                            });
                            break;
                        case "deleteSelected":
                            confirmDialog("#{fxMessageBean['SearchResult.dialog.confirm.deleteSelection']}", function() {
                                try {
                                    flexive.util.getJsonRpc().ContentEditor.removeMultiple(selectedIds);
                                    reload();
                                } catch (e) {
                                    alertDialog(e);
                                }
                            });
                            break;
                        case "deleteBriefcase":
                            try {
                                flexive.util.getJsonRpc().BriefcaseEditor.removeItems(briefcaseId, [pk.id]);
                                reload();
                            } catch (e) {
                                alertDialog(e);
                            }
                            break;
                        case "deleteBriefcaseSelected":
                            try {
                                flexive.util.getJsonRpc().BriefcaseEditor.removeItems(briefcaseId, selectedIds);
                                reload();
                            } catch (e) {
                                alertDialog(e);
                            }
                            break;
                        default:
                    }
                }

                function reload() {
                    document.forms["frm"].submit();
                }
            //-->
            </script>

            <c:if test="#{fxSearchResultBean.queryBuilder != null}">
                <h:inputHidden id="rowCount" value="#{fxSearchResultBean.rowCount}"/>
                <h:inputHidden id="versionFilter" value="#{fxSearchResultBean.versionFilter}"/>
                <h:inputHidden id="contentEditorId" value="#{contentEditorBean.id}"/>
                <h:inputHidden id="contentEditorVersion" value="#{contentEditorBean.version}"/>

                <h:selectOneListbox id="typeId" value="#{fxSearchResultBean.typeId}" size="1">
                    <f:selectItems value="#{fxSearchResultBean.contentTypeItems}"/>
                    <a4j:support event="onchange" reRender="refreshResults"/>
                </h:selectOneListbox>
                <h:selectOneListbox id="version" value="#{fxSearchResultBean.versionFilter}" size="1">
                    <f:selectItems value="#{fxSearchResultBean.versionItems}"/>
                    <a4j:support event="onchange" reRender="refreshResults"/>
                </h:selectOneListbox>

                <a4j:outputPanel id="refreshResults">
                    <fx:resultTableUpdater var="resultTable" value="#{fxSearchResultBean.result}"/>
                </a4j:outputPanel>


                <div id="resultTableContainer">
                    <fx:resultTable var="resultTable" value="#{fxSearchResultBean.result}"/>
                </div>

                <fx:menu name="resultsMenu" beforeShow="onShowContextMenu" clickHandler="onContextMenu" trigger="'resultTableContainer'">
                    <fx:menuItem id="show" labelKey="SearchResult.menu.show" icon="open"/>
                    <fx:menuItem id="showScreenview" labelKey="SearchResult.menu.showScreenview" icon="open"/>
                    <fx:menuItem id="edit" labelKey="SearchResult.menu.edit" icon="edit"/>
                    <!--<fx:menuSeparator/>-->
                    <fx:menuItem id="copy" labelKey="SearchResult.menu.copy" icon="copy"/>
                    <!--<fx:menuSeparator/>-->
                    <fx:menuItem id="deleteBriefcase" labelKey="SearchResult.menu.deleteBriefcase" icon="removeBriefcaseItems"/>
                    <fx:menuItem id="deleteBriefcaseSelected" labelKey="SearchResult.menu.deleteBriefcaseSelected" icon="removeBriefcaseItems"/>
                    <fx:menuItem id="delete" labelKey="SearchResult.menu.delete" icon="remove"/>
                    <fx:menuItem id="deleteSelected" labelKey="SearchResult.menu.deleteSelected" icon="remove"/>
                </fx:menu>

                <div style="display:none">
                    <h:commandLink id="showButton" action="#{contentEditorBean.load}">
                        <f:setPropertyActionListener value="#{true}" target="#{contentEditorBean.readOnly}"/>
                    </h:commandLink>
                    <h:commandLink id="editButton" action="#{contentEditorBean.load}">
                        <f:setPropertyActionListener value="#{false}" target="#{contentEditorBean.readOnly}"/>
                    </h:commandLink>
                </div>
            </c:if>
            <adm:toolbarPluginButtons/>

        </a4j:form>

        <script type="text/javascript">
            if (parent.reloadBriefcases) {
                parent.reloadBriefcases();
            }
        </script>
    </ui:define>

</ui:composition>

</body>
</html>
