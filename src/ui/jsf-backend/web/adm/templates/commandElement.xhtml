<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:fn="http://java.sun.com/jsp/jstl/functions"
      xmlns:t="http://myfaces.apache.org/tomahawk">

Basic [fleXive] command element template.
It will lock the screen when the data is submitted, unless the lockscreen attribute is set to false.

Parameters:
 label - the button label
 labelKey - message key for the button label (overrides label when specified)
 title - [optional] the button title (used by browsers to display tooltip on mouseover)
titleKey - [optional]  message key for the button title (overrides title when specified).
                       if not specified and labelKey is set, it defaults to #{labelKey}.title
 confirmKey - [optional] message key for a confirm dialog that will be displayed before the action is called
 bean - the bean that the action belongs to
 action - the action to call
 immediate - [optional] the jsf immediate flag
 page - [optional] the page to render when the button is clicked
 location - [optional] The location where the icon is displayed [content|toolbar|both]. The default is content
 separator - [optional], [before|after|none] If displayed in the toolbar a separator will be placed before or after the icon.
 onclick - [optional] the onClick event of the action link
 lockscreen - [optional] if false, the screen will not be locked when clicking this button
 icon - [optional] the name of the icon to be displayed. the icon name is mapped to the url "adm/images/commandButton/${icon}.png"
 iconUrl - [optional] the url (aboslute, including the context path)
                      of the icon to be displayed (i.e. /flexive/images/myIcon.png)
 rendered - [optional] flag to supress rendering of the whole component

<ui:composition>

    <c:if test="#{empty rendered}">
        <c:set var="rendered" value="#{true}"/>
    </c:if>

    <ui:fragment rendered="#{rendered}">
        <c:if test="#{!empty labelKey}">
            <c:set var="label" value="#{fxMessageBean[labelKey]}"/>
        </c:if>
        <c:if test="${empty label}">
            <c:set var="label" value="CommandButton.err.missingLabel" />
        </c:if>

        <c:if test="#{!empty titleKey}">
            <c:set var="title" value="#{fxMessageBean[titleKey]}"/>
        </c:if>

        <c:if test="#{empty title and empty titleKey and not empty labelKey}">
            <c:set var="titleKey" value="#{labelKey}.title"/>
        </c:if>

        <c:if test="#{!empty titleKey and fxSystemBean.messageExists[titleKey]}">
            <c:set var="title" value="#{fxMessageBean[titleKey]}"/>
        </c:if>

        <c:if test="#{empty title}">
            <c:set var="title" value="#{label}"/>
        </c:if>

        <c:if test="${empty location}">
            <c:set var="location" value="both" />
        </c:if>

        <c:if test="#{bean == null}">
            <c:set var="page" value="#{action}" />
            <c:set var="action" value="gotoPage" />
            <c:set var="bean" value="#{fxSystemBean}" />
        </c:if>

        <c:if test="#{immediate == null}">
            <c:set var="immediate" value="false"/>
        </c:if>

        <c:if test="#{lockscreen == null}">
            <c:set var="lockscreen" value="true"/>
        </c:if>

        <c:if test="#{not empty icon}">
            <c:set var="iconUrl" value="#{fxSystemBean.contextPath}/adm/images/commandButton/#{icon}.png"/>
        </c:if>

        <c:if test="${location == 'content'}">
            <c:set var="id" value="#{id}_LOCCONTENT"/>
        </c:if>

        <div id="commandElement_#{id}" style="display:none">
            <h:commandLink id="#{id}" action="#{bean[action]}" onclick="#{onclick}" immediate="#{immediate}">
                <c:if test="#{page!=null}"><f:param name="page" value="#{page}"/></c:if>
                <ui:insert/>
            </h:commandLink>
        </div>

        <script type="text/javascript" language="javascript">
            parent.registerCommandElement(this,'#{id}','#{fxMessageBean[confirmKey]}',#{lockscreen});
            function triggerCommandElement_#{id}() {
                eval(parent.getCommandElementScript(self,'#{id}'))
            }
        </script>

        <c:if test="${location=='both' || location=='content'}">
            <ui:insert name="content">Content</ui:insert>
        </c:if>

        <c:if test="${location=='both' || location=='toolbar'}">
            <c:if test="${separator=='before'}">
                <script type="text/javascript" language="javascript">
                    parent.addToolbarSeparator();
                </script>
            </c:if>

            <script type="text/javascript" language="javascript">
                parent.addToolbarItem('#{fxSystemBean.response.id}',this,'#{id}','#{title}','','#{iconUrl}');
            </script>
            <c:if test="${separator=='after'}">
                <script type="text/javascript" language="javascript">
                    parent.addToolbarSeparator();
                </script>
            </c:if>
        </c:if>
    </ui:fragment>

</ui:composition>

</html>