<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:t="http://myfaces.apache.org/tomahawk"
    xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
    xmlns:fx="http://www.flexive.com/jsf/core">

Description:
A client-side result table implemented using the Yahoo datatable widget.

Parameters:
    var      - name of the Javascript variable that exposes the Yahoo DataTable widget
    value    - the result set to be rendered, or a plain text FxSQL query
    viewType - the view type (THUMBNAILS or LIST). If not set and a result set is passed in as value,
               the result set's viewtype is used, otherwise it defaults to LIST.
    clickHandler - an optional Javascript method for handling clicks on the table. The first two parameters
                are the element that received the click and the primary key, if available.
    actionColumnHandler - an optional instance of type flexive.yui.datatable.ActionColumnHandler
                for generating the contents of the "Action" column - an additional column that can be used
                for displaying custom actions for contents and that will only be visible when this parameter is set.
                The flexive.yui.datatable.ActionColumnHandler#getActionColumn method is passed the primary
                key and the permissions of the column, which can be null if the search result does not contain the
                @pk or @permissions properties.
<ui:composition>

    <c:if test="#{empty var}">
        Required attribute "var" missing for fx:resultTable.
    </c:if>

    <c:if test="#{!empty var}">
        <div id="#{var}_datatable"> </div>

        <script type="text/javascript">
        <!--
            var #{var};
            flexive.yui.require("datatable");
            flexive.yui.onYahooLoaded(function() {
                var containerElName = "#{var}_datatable";
                var createFun = function(result) {
                    var actionColumnHandler = #{empty actionColumnHandler ? 'null' : actionColumnHandler};
                    // get JSON representation of the search result
                    var view = flexive.yui.datatable.getViewWrapper(result, actionColumnHandler);
                    var isThumbnails = result.viewType == "THUMBNAILS";

                    var dataSource = new YAHOO.util.DataSource(view.getRows());
                    dataSource.responseType = YAHOO.util.DataSource.TYPE_JSARRAY;
                    dataSource.responseSchema = view.getResponseSchema();
                    var dataTable = new YAHOO.widget.DataTable(containerElName,
                        view.getColumns(), dataSource,
                        { paginator: new YAHOO.widget.Paginator({
                            template : "#{fxMessageBean['ResultTable.label.rowSelect']}",
                            rowsPerPage : view.rowsPerPage,
                            rowsPerPageOptions : isThumbnails ? [5, 10, 25, 50] : [10,25,50,100]
                        }) }
                    );
                    var __clickHandlerFn = #{empty clickHandler ? 'null' : clickHandler};
                    var __clickHandler = __clickHandlerFn == null ? null :
                        function(args) {
                            var pk = flexive.yui.datatable.getPk(#{var}, args.target);
                            __clickHandlerFn(args.target, pk);
                        };
                    var selectionEnabled = __clickHandler == null;
                    if (isThumbnails) {
                        // enable cell selection
                        if (selectionEnabled) {
                            dataTable.set("selectionMode", "cellrange");
                            dataTable.subscribe("cellClickEvent", dataTable.onEventSelectCell);
                        }
                        if (__clickHandler != null) {
                            dataTable.subscribe("cellClickEvent", __clickHandler);
                        }
                        // enable cell highlighting
                        dataTable.subscribe("cellMouseoverEvent", dataTable.onEventHighlightCell);
                        dataTable.subscribe("cellMouseoutEvent", dataTable.onEventUnhighlightCell);
                        document.getElementById(containerElName).className += " flexiveResultThumbnails";
                    } else {
                        // enable row selection
                        if (selectionEnabled) {
                            dataTable.subscribe("rowClickEvent", dataTable.onEventSelectRow);
                        }
                        if (__clickHandler != null) {
                            dataTable.subscribe("rowClickEvent", __clickHandler);
                        }
                        // enable row highlighting
                        dataTable.subscribe("rowMouseoverEvent", dataTable.onEventHighlightRow);
                        dataTable.subscribe("rowMouseoutEvent", dataTable.onEventUnhighlightRow);
                        document.getElementById(containerElName).className += " flexiveResultList";
                    }
                    return dataTable;
                }
                // disable text selection
                var elContainer = document.getElementById(containerElName);
                elContainer.onselectstart = function() { return false; };
                elContainer.style.MozUserSelect = "none";


                #{var} = createFun(#{fx:getJsonResult(value, viewType)});
                #{var}._reset = function(result) {
                    var reset = #{var}._reset;  // keep old method
                    // wipe out the entire datatable and create a new one
                    #{var}.destroy();
                    #{var} = createFun(result);
                    #{var}._reset = reset;
                }
            });
        //-->
        </script>
    </c:if>

</ui:composition>


</html>
