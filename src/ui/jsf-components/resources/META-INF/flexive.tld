<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
        "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib>
    <tlib-version>1.0</tlib-version>
    <jsp-version>1.2</jsp-version>
    <short-name>ui</short-name>
    <uri>http://www.flexive.com/jsf/core</uri>
    <description>
    </description>

    <tag>
        <name>formRow</name>
        <body-content>JSP</body-content>
        <description>Basic [fleXive3] form row.</description>
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>main input element ID (for assigning the label)</description>
        </attribute>
        <attribute>
            <name>label</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>Label</description>
        </attribute>
        <attribute>
            <name>labelKey</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>Message key (overrides label)</description>
        </attribute>
        <attribute>
            <name>tooltipKey</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>Message key of the tooltip (if not specified and labelKey is set, it defaults to
                #{labelKey}.tooltip)
            </description>
        </attribute>
        <attribute>
            <name>newLine</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>if a newline should be rendered after the input row (default: true)</description>
        </attribute>
        <attribute>
            <name>width</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>overrides the default width (value in pixel, eg width="100")</description>
        </attribute>
        <attribute>
            <name>relativeWidth</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>overrides the default width (value in %, eg width="80")</description>
        </attribute>
        <attribute>
            <name>height</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>overrides the default height (value in pixel, eg height="80")</description>
        </attribute>
        <attribute>
            <name>overrideStyle</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>override the style settings of the outer formRow container div</description>
        </attribute>
        <attribute>
            <name>overrideInputStyle</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>override the style settings of the inner div containing the (form) input element</description>
        </attribute>
    </tag>
    <tag>
        <name>fxValueInputRow</name>
        <body-content>JSP</body-content>
        <description>A flexive form input row with a single fxValueInput field.</description>
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>element input ID</description>
        </attribute>
        <attribute>
            <name>labelKey</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>Label key (possibly including parameters, e.g. my.property.message,#{myBean.value}
            </description>
        </attribute>
        <attribute>
            <name>label</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>Label text to be displayed</description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>the FxValue object to be displayed (mandatory, must not be null)</description>
        </attribute>
        <attribute>
            <name>inputMapper</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>an (optional) InputMapper</description>
        </attribute>
        <attribute>
            <name>onchange</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>a javascript onchange handler</description>
        </attribute>
        <attribute>
            <name>readOnly</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>true to enable read-only mode</description>
        </attribute>
        <attribute>
            <name>decorate</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>if false, no label/input div will be rendered, only the output of the fxValueInput component
            </description>
        </attribute>
        <attribute>
            <name>filter</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>filter HTML output?</description>
        </attribute>
    </tag>
    <tag>
        <name>queryEditor</name>
        <body-content>JSP</body-content>
        <description>[fleXive3] search query editor.</description>
        <attribute>
            <name>nodes</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>list of nodes of the (sub-)tree to be rendered</description>
        </attribute>
        <attribute>
            <name>addAssignmentNode</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>form element where the selected node for adding an assignment should be stored</description>
        </attribute>
        <attribute>
            <name>addAssignmentNodeValue</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>id of the preselected node (no node will be selected for -1 or empty values)</description>
        </attribute>
        <attribute>
            <name>selectionNode</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>form element for storing the current selection (a comma-separated list of node IDs)
            </description>
        </attribute>
        <attribute>
            <name>emptyMessageKey</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>message key of the message to be displayed when the current query is empty</description>
        </attribute>
    </tag>
    <tag>
        <name>queryEditorChild</name>
        <body-content>JSP</body-content>
        <description>Search query editor table. Used by queryEditor.xhtml for rendering the actual query editor.
        </description>
        <attribute>
            <name>nodes</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>list of nodes of the (sub-)tree to be rendered</description>
        </attribute>
        <attribute>
            <name>addAssignmentNode</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>form element where the selected node for adding an assignment should be stored</description>
        </attribute>
        <attribute>
            <name>addAssignmentNodeValue</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>id of the preselected node (no node will be selected for -1 or empty values)</description>
        </attribute>
        <attribute>
            <name>selectionNode</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>form element for storing the current selection (a comma-separated list of node IDs)
            </description>
        </attribute>
    </tag>
    <tag>
        <name>popupDialog</name>
        <body-content>JSP</body-content>
        <description>A simple javascript popup panel.</description>
        <attribute>
            <name>jsVar</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>javascript variable name that should be initialized with this</description>
        </attribute>
        <attribute>
            <name>closeControl</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>element ID that should be used for closing the dialog</description>
        </attribute>
    </tag>
    <tag>
        <name>fieldSet</name>
        <body-content>JSP</body-content>
        <description>Basic [fleXive3] form group (fieldset).</description>
        <attribute>
            <name>legend</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>label of the fieldset (usually displayed in the top border)</description>
        </attribute>
        <attribute>
            <name>legendKey</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>message key for the label (if specified, the legend attribute is ignored)</description>
        </attribute>
        <attribute>
            <name>width</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>width in px, overrides the default width of the fieldset, which also affects any nested form rows
            </description>
        </attribute>
        <attribute>
            <name>relativeWidth</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>width in %, overrides the default width of the fieldset, which also affects any nested form rows
            </description>
        </attribute>
    </tag>
    <tag>
        <name>downloadLink</name>
        <body-content>JSP</body-content>
        <description>Renders a download link for the given object/xpath. The passed body content is rendered inside the
            link.
        </description>
        <attribute>
            <name>pk</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>the primary key of the object</description>
        </attribute>
        <attribute>
            <name>xpath</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>the xpath of the binary value to be download, e.g. /document</description>
        </attribute>
        <attribute>
            <name>filename</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>the filename to be rendered. If not specified, the primary key is used (without extension).
            </description>
        </attribute>
    </tag>
    <tag>
        <name>fxValueInputLanguageSelect</name>
        <body-content>JSP</body-content>
        <description>A select list that toggles all fx:fxValueInput elements on the current page (client-side).
        </description>
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>the input ID (required)</description>
        </attribute>
    </tag>
    <tag>
        <name>children</name>
        <body-content>JSP</body-content>
        <description>Iterator tag for properties and groups of a content instance.</description>
        <attribute>
            <name>value</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>the content instance (provided by fx:content) or group (provided by fx:values)</description>
        </attribute>
        <attribute>
            <name>property</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>name/xpath of the property or group to be iterated</description>
        </attribute>
        <attribute>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>name of the variable where the current value will be exposed in the tag body.</description>
        </attribute>
    </tag>
    <tag>
        <name>resultTable</name>
        <body-content>JSP</body-content>
        <description>A client-side result table implemented using the Yahoo datatable widget.</description>
        <attribute>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>name of the Javascript variable that exposes the Yahoo DataTable widget</description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>the result set to be rendered, or a plain text FxSQL query</description>
        </attribute>
        <attribute>
            <name>viewType</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>the view type (THUMBNAILS or LIST). If not set and a result set is passed in as value,
            </description>
        </attribute>
        <attribute>
            <name>clickHandler</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>an optional Javascript method for handling clicks on the table. The first two parameters
            </description>
        </attribute>
    </tag>
    <tag>
        <name>resultTableUpdater</name>
        <body-content>JSP</body-content>
        <description>Updates the given result table on the current page. Useful for updates during partial page
            rendering. Ajax4JSF: place this component in the page region that will be re-rendered (e.g. an
            a4j:outputPanel component).
        </description>
        <attribute>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>name of the javascript variable that exposes the Yahoo DataTable widget (default: resultTable)
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <description>the result set to be rendered, or a plain text FxSQL query</description>
        </attribute>
    </tag>
    <tag>
        <name>yuiSetup</name>
        <body-content>JSP</body-content>
        <description>Initializes the Yahoo UI component library shipped with flexive. Include this near the end of all
            pages where you may want to use Yahoo UI. The Yahoo Loader is only executed when at least one flexive
            component on the page uses a Yahoo widget, so the performance impact is minimal if no widget is used.
        </description>
    </tag>
    <tag>
      <name>linearizeFxValueInputs</name>
      <body-content>JSP</body-content>
      <description>Helper tag to linearize the navigation between all fx:fxValueInput instances on a page. After activating the first input on the page, the user can navigate to all following using the "tab" key (i.e. the tabindex will be strictly increasing for all succeeding inputs, skipping other navigation elements and the language selects).  This tag requires YUI. Add this component near the end of the page, but before the call to fx:yuiSetup.  </description>
      <attribute>
        <name>startIndex</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
        <description>the first tab-index to be used</description>
      </attribute>
      <attribute>
        <name>rootNode</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
        <description>an optional root DOM node ID where the search for fx:fxValueInput elements should start</description>
      </attribute>
    </tag>
    <tag>
      <name>resizable</name>
      <body-content>JSP</body-content>
      <description>Adds a YUI Resize control for the body contents.  </description>
    </tag>
    <tag>
        <name>colorPicker</name>
        <body-content>JSP</body-content>
        <description>
            A color picker based on Yahoo UI, shown in a popup dialog. The color value will be written to the given form
            element (a text or hidden input element). The color picker can be nested directly in a JSF input element
            (e.g. h:inputText). In this case it will be rendered directly before the actual input element.
        </description>
        <attribute>
            <name>inputId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>ID of the input element where the picked color value will be stored. If not set, the parent
                component ID will be used.
            </description>
        </attribute>
    </tag>
    <tag>
        <name>includes</name>
        <body-content>JSP</body-content>
        <description>Includes external resources (CSS and JavaScripts) used by [fleXive] components. Place this in the
            &lt;head> section of your HTML page.
        </description>
        <attribute>
            <name>all</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>If true, includes all resources supported by the tag. This leads to a performance penalty for
                loading and initializing the Javascript libraries, but is more convenient if performance is not
                critical.
            </description>
        </attribute>
        <attribute>
            <name>htmlEditor</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>If true, the HTML editor (currently TinyMCE) will be loaded and initialized. Since TinyMCE must
                be initialized in the &lt;head&gt; section, unfortunately you have to set this attribute manually when a
                &lt;fx:fxValueInput&gt; component is used for a HTML property.
            </description>
        </attribute>
        <attribute>
            <name>jsonRpc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Includes the JSON-RPC-Java library for Ajax calls via JSON/RPC (the Javascript proxy can then
                be obtained with flexive.yui.getJsonRpc() ).
            </description>
        </attribute>
        <attribute>
            <name>yui</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Includes the Yahoo UI bootstrap library. If you want to use Yahoo UI components, you also have
                to include a call to &lt;fx:yuiSetup/&gt; near the end of your page. You also have to specify the skin
                class on your page, the most convenient way is through the body tag, e.g.: &lt;body class="yui-skin-sam"&gt;
                .
            </description>
        </attribute>
    </tag>
    <tag>
        <name>fxValueInput</name>
        <body-content>JSP</body-content>
        <attribute>
            <name>value</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>An expression of type FxValue of the value to be edited. Note that the value must not be null,
                otherwise the input component cannot determine the actual FxValue type.
            </description>
        </attribute>
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>An optional client ID of the input component.</description>
        </attribute>
        <attribute>
            <name>externalId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>An optional external ID that overrides the clientId in JSF validation error messages - may be
                necessary in complex, generic forms, but usually you won't need this.
            </description>
        </attribute>
        <attribute>
            <name>readOnly</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>If true, only the value itself will be rendered.</description>
        </attribute>
        <attribute>
            <name>readOnlyShowTranslations</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>If true, all translations of a property will be shown, else only the best matching translation
                (in the calling users language or the language marked as default).
            </description>
        </attribute>
        <attribute>
            <name>forceLineInput</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>For multiline and HTML properties, force to render a single-line input field (e.g. for search
                query forms).
            </description>
        </attribute>
        <attribute>
            <name>inputMapper</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>An optional input mapper for rendering the input control. For example, properties referencing
                other content may need a custom input mapper that provides a select list of content instances. For more
                information take a look at the InputMapper documentation and at .
            </description>
        </attribute>
        <attribute>
            <name>valueFormatter</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>A FxValueFormatter to be used for rendering the value (in read-only mode only). If not
                specified, the JSF renderer will choose the appropriate default formatter for the actual value class.
            </description>
        </attribute>
        <attribute>
            <name>filter</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>If set to false, HTML output will not be filtered. If set to true (the default), HTML entities
                will be used for sensitive characters (e.g. "&amp;lt;" instead of "&lt;").
            </description>
        </attribute>
        <attribute>
            <name>containerDivClass</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>If this CSS class property is set, the component will be embedded in a div-container using this
                CSS class as style.
            </description>
        </attribute>
        <attribute>
            <name>disableMultiLanguage</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Disables multi language support even if the FxValue object is multilingual. Only the default
                translation will be displayed and updated.
            </description>
        </attribute>
        <attribute>
            <name>disableLytebox</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Set this property to true if the Lytebox javascript library used for rendering inline previews
                of images should not be used.
            </description>
        </attribute>
        <attribute>
            <name>onchange</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>An optional javascript expression to be called when an input element changed its value.
            </description>
        </attribute>
        <attribute>
            <name>autocompleteHandler</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>An instance of the flexive.yui.AutoCompleteHandler javascript class. This class provides a
                query method for a client-side autocomplete widget provided by Yahoo UI, as well as a method for
                formatting the response.
            </description>
        </attribute>
    </tag>
    <tag>
        <name>content</name>
        <body-content>JSP</body-content>
        <attribute>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The name of the variable that provides the content. The actual FxContent instance itself is
                provided in "#{var}_content", i.e. if var="project", then the FxContent is supplied in
                "project_content".
            </description>
        </attribute>
        <attribute>
            <name>pk</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>A primary key. May be supplied as an FxPK object, a long ID, a String containing a primary key
                (e.g. "5", "5.1", "5.MAX"), a FxReference, or a FxSelectListItem whose ID will be interpreted as a
                content ID.
            </description>
        </attribute>
        <attribute>
            <name>type</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The new content type ID (if no PK was specified)</description>
        </attribute>
        <attribute>
            <name>typeName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The new content type name (if no PK was specified)</description>
        </attribute>
        <attribute>
            <name>preserveContent</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>If set to true, the content instance will be stored in the JSF viewstate. This is
                memory-expensive, but is necessary for editor pages that modify the content structure, e.g. pages that
                allow to add or remove groups or properties. By default, this option is set to false.
            </description>
        </attribute>
        <attribute>
            <name>content</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The content instance to be displayed (if no PK was specified).</description>
        </attribute>
    </tag>
    <tag>
        <name>value</name>
        <body-content>JSP</body-content>
        <attribute>
            <name>property</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The XPath of the property.</description>
        </attribute>
        <attribute>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The value of the "var" attribute of the &lt;fx:content&gt; component whose content should be
                edited. If nested directly in a fx:content tag, this attribute can be omitted.
            </description>
        </attribute>
        <attribute>
            <name>labelKey</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>An optional message key that overrides the assignment label.</description>
        </attribute>
    </tag>
    <tag>
        <name>contentList</name>
        <body-content>JSP</body-content>
        <attribute>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Name of the variable that provides the content. The actual FxContent instance itself is
                provided in "#{var}_content", i.e. if var="project", then the FxContent is supplied in
                "project_content".
            </description>
        </attribute>
        <attribute>
            <name>indexVar</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Optional name for a variable that exposes the current iteration index.</description>
        </attribute>
        <attribute>
            <name>queryBuilder</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>An expression of type SqlQueryBuilder that is used for selecting the contents.</description>
        </attribute>
        <attribute>
            <name>explode</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Indicates whether the content instances should be "exploded", i.e. whether empty properties
                should be initialized. Useful for content editors. Defaults to false.
            </description>
        </attribute>
    </tag>
    <tag>
        <name>dojoMenu</name>
        <body-content>JSP</body-content>
    </tag>
    <tag>
        <name>dojoMenuItem</name>
        <body-content>JSP</body-content>
    </tag>
    <tag>
        <name>dojoMenuSeparator</name>
        <body-content>JSP</body-content>
    </tag>
    <tag>
        <name>menu</name>
        <body-content>JSP</body-content>
    </tag>
    <tag>
        <name>menuItem</name>
        <body-content>JSP</body-content>
    </tag>
    <tag>
        <name>menuItemGroup</name>
        <body-content>JSP</body-content>
    </tag>
    <tag>
        <name>resultValue</name>
        <body-content>JSP</body-content>
        <attribute>
            <name>value</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The value to be rendered. Can be of any type.</description>
        </attribute>
        <attribute>
            <name>linkFormatter</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>A ContentLinkFormatter instance that will be used for rendering links to contents. This applies
                to the rendering of the virtual properties @pk and @path , as described in . If not specified, the
                default ContentLinkFormatter will be used. For a description of the supported link format, please refer
                to the [fleXive] JavaDoc of this class.
            </description>
        </attribute>
        <attribute>
            <name>contentLinkFormat</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The format string passed to the linkFormatter for content links, i.e. FxPK values. For a
                description of the supported link format of the default formatter, please refer to the [fleXive] JavaDoc
                of this class.
            </description>
        </attribute>
        <attribute>
            <name>itemLinkFormat</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The format string used for FxPaths values as returned by the virtual @path property. For a
                description of the supported link format of the default formatter, please refer to the [fleXive] JavaDoc
                of this class.
            </description>
        </attribute>
    </tag>
    <tag>
        <name>thumbnail</name>
        <body-content>JSP</body-content>
        <attribute>
            <name>pk</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The primary key of the content instance. If the PK is specified, the default thumbnail of the
                content is rendered.
            </description>
        </attribute>
        <attribute>
            <name>binary</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>A specific binary entry of type FxBinary to be rendered. This is useful for for content types
                with more than one binary property. For an example, see .
            </description>
        </attribute>
        <attribute>
            <name>urlOnly</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>If true, only the thumbnail URL will be rendered (relative to the context root, e.g.
                thumbnail/pk5.1/s0 ).
            </description>
        </attribute>
        <attribute>
            <name>previewSize</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The desired size of the thumbnail. Valid values are taken from BinaryDescriptor.PreviewSizes :
                PREVIEW1 , PREVIEW2 (default), PREVIEW3 , ORIGINAL.
            </description>
        </attribute>
    </tag>
    <tag>
        <name>regularExpressionValidator</name>
        <body-content>JSP</body-content>
    </tag>

    <tag>
        <name>navigation</name>
        <body-content>JSP</body-content>
        <attribute>
          <name>var</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
          <description>The variable name where the current tree node of type FxTreeNode will be exposed to the page.</description>
        </attribute>
        <attribute>
          <name>output</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
          <description>The output format. default Plain HTML output. csspopup Renders additional CSS classes that will show only  the first tree level and open the subfolders when the  mouse hovers over them. yui Renders additional markup that allows the Yahoo UI  Menu component to build a menu. If JavaScript is disabled,  the plain HTML markup is shown to the use.  Note that you have to include YUI on the page with &lt;fx:includes&gt; .</description>
        </attribute>
        <attribute>
          <name>path</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
          <description>The tree folder to be rendered. If none is specified, the root folder  ("/") is rendered.</description>
        </attribute>
        <attribute>
          <name>mode</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
          <description>The tree mode, "edit" or "live" (default).</description>
        </attribute>
        <attribute>
          <name>depth</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
          <description>The maximum tree depth for sub folders. For example, a value of 2 will render  content of the given tree path and the first level of subfolders.</description>
        </attribute>
        <attribute>
          <name>selectedNodeId</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
          <description>If specified, the given tree node ID will be highlighted in the HTML output.</description>
        </attribute>
    </tag>
    <tag>
        <name>contentEditor</name>
        <body-content>JSP</body-content>
        <description>Allows editing of contents by providing an
            AJAX-dependent user interface and preserving edited content
            instances throughout multiple requests in the view-state
            of the same view.
            Note that the content editor depends on RichFaces Ajax4jsf,
            as well as the fx:includes of htmlEditor and yui.
        </description>
        <attribute>
            <name>editorId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Id of the content editor component (must be unique in a view,
                        used as key to retrieve a specific content instance stored in view-state).
            </description>
        </attribute>
        <attribute>
            <name>formPrefix</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <description>The form prefix of the surrounding form.</description>
        </attribute>
        <attribute>
            <name>contentId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Id of the content to be edited. The maximum available version is loaded.</description>
        </attribute>
        <attribute>
            <name>editMode</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>If true initilaizes this component to edit mode, otherwise to view mode (default: false).</description>
        </attribute>
        <attribute>
            <name>pk</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>FxPk of the content to be edited.</description>
        </attribute>
        <attribute>
            <name>content</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Content instance to be edited.</description>
        </attribute>
        <attribute>
            <name>typeId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Type id of the content instance to be created.</description>
        </attribute>
        <attribute>
            <name>type</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>FxType of the content instance to be created.</description>
        </attribute>
        <attribute>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>Variable name to expose the FxWrappedContent instance within the tag's body.</description>
        </attribute>
        <attribute>
            <name>reset</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if the content for the given editor id should be reset upon the next request
                (==removed from content storage and reinitilaized with given attributes, default: false).</description>
        </attribute>
        <attribute>
            <name>reRender</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>External client id which is to be rerendered upon the next AJAX-request triggered
                        by the content editor component. Useful for rerendering a component containing
                        several fxContentEditors.
            </description>
        </attribute>
        <attribute>
            <name>valueFormatter</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>A custom FxValueFormatter that is passed to &lt;fxValueInput/> components within the content editor.</description>
        </attribute>
        <attribute>
            <name>disableAcl</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if ACL selectbox should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableWorkflow</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if workflow selct box should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableEdit</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if "edit" button should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableDelete</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if "delete" button should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableVersion</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if "save in new version" button and "delete version" button should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableCompact</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if "compact" button should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableSave</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if "save" button should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableCancel</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if "cancel" button should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableButtons</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if no buttons should be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableAddAssignment</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if icons for adding/inserting assignments should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableRemoveAssignment</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if icons for removing assignments should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disablePositionAssignment</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if icons for positioning assignments should not be rendered (default:false).</description>
        </attribute>
        <attribute>
            <name>disableMessages</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <description>True if the &lt;h:messages/&gt; tag inside the content editor should not be rendered (default:false).</description>
        </attribute>
    </tag>
</taglib>