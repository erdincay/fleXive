<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section [
        <!ENTITY % global_entities SYSTEM "../global.ent">
        %global_entities;
        ]>
<section xml:id="core_structure_groups" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Groups and group assignments</title>
    <para>A group basically only defines a name (and some options). It can only exist (and is of relevance) if it
        is assigned to a type or another group. The purpose of keeping groups and their assignments separate is the
        ability to share them and be consistent with how properties and property assignments are handled.
    </para>
    <para>
        Just like using properties, there are two ways to assign a group to an existing type or another group:
        Either by calling
        <code>FxGroupEdit.createNew(..)</code>
        method which can clone existing or create entirely
        new groups or by reusing an existing group assignment by calling<code>
        FxGroupAssignmentEdit.createNew(..)</code>.
    </para>
    <para>
        <example xml:id="core_structre_ex_newGroup">
            <title>Creating a new group</title>
            <programlistingco>
                <xi:include href="../listings/core_structure_newgroup.xml"/>
                <calloutlist>
                    <callout arearefs="cst_newgroup_1">
                        <para>Obtain a reference to the assignment engine which is needed to create groups, properties
                            and
                            (of course) assignments
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_2">
                        <para>We're about to create a new group</para>
                    </callout>
                    <callout arearefs="cst_newgroup_3">
                        <para>Since groups can not be created without assigning them to a type, we have to provide the
                            id of
                            the type we want to assign this group to.
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_4">
                        <para>The second parameter to
                            <methodname>AssignmentEngine.createNew(..)</methodname>
                            is a new
                            <classname>FxGroupEdit</classname>
                            instance.
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_5">
                        <para>"Address" is the name we chose for the new group</para>
                    </callout>
                    <callout arearefs="cst_newgroup_6">
                        <para>The label (for user interfaces)</para>
                    </callout>
                    <callout arearefs="cst_newgroup_7">
                        <para>The hint (for user interfaces again)</para>
                    </callout>
                    <callout arearefs="cst_newgroup_8">
                        <para>This parameter allows overriding the multiplicity assigned in the next line by assignments
                            to
                            the group
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_9">
                        <para>We make the group required, setting the multiplictiy to 1..1 (See
                            <xref linkend="core_structure_multiplicity"/>
                            for more information)
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_10">
                        <para>This parameter is optional, since it is the default value. We set the group mode to allow
                            any
                            of the group's children to be present. An alternative would be
                            <constant>OneOf</constant>
                            where only one child of the group may be set. (See
                            <xref linkend="core_structure_groups_mode"/>
                            for more information)
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_11">
                        <para>We need to provide the XPath relative to the root group of the type where we want to
                            assign
                            the group to. Using "/" will assign it directly to the root group.
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_12">
                        <para>We create a property called "Street" which we want to assign to the address group later.
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_13">
                        <para>Same for the property "ZIP"</para>
                    </callout>
                    <callout arearefs="cst_newgroup_14">
                        <para>The "Street" property is created like in
                            <xref linkend="core_structure_properties"/>, but we
                            assign it to our new created group "/Address"
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_15">
                        <para>And again for the "ZIP" code</para>
                    </callout>
                </calloutlist>
            </programlistingco>
        </example>
        <para>Here's another example for creating groups using the
            <classname>GroovyTypeBuilder</classname>
            and for attaching content using the <classname>GroovyContentBuilder</classname>:
        </para>
        <example xml:id="core_structre_ex_newGroup_groovy">
            <title>Creating a new group using the
                <classname>GroovyTypeBuilder</classname>
            </title>
            <programlistingco>
                <xi:include href="../listings/core_structure_newgroup_groovy.xml"/>
                <calloutlist>
                    <callout arearefs="cst_newgroup_1">
                        <para>Create the type "Person" using the
                            <classname>GroovyTypeBuilder</classname>
                            ..
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_2">
                        <para>.. use the default ACLs ..</para>
                    </callout>
                    <callout arearefs="cst_newgroup_3">
                        <para>.. and set the type to support multiple languages.
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_4">
                        <para>Create the first property "firstname".
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_5">
                        <para>Another property for the last name (implicitly required because auf the
                            default multiplicity of 1..N), which is a derived assignment from "FIRSTNAME".
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_6">
                        <para>Here, the group "Address" having the XPath "ADDRESS" is created.
                            Important: UPPERCASE LETTERS (Either the whole group name or simply the first letter, as in
                            "Address") always denote the creation of a Group.
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_7">
                        <para>The group's only property: "street".</para>
                    </callout>
                    <callout arearefs="cst_newgroup_8">
                        <para>Retrieve a
                            <classname>GroovyContentBuilder</classname>
                            instance.
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_9">
                        <para>Call the builder passing the parameters (XPathname([contentValue]):
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_10">
                        <para>Set the firstname to "John".
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_11">
                        <para>Set the lastname to "Doe".
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_12">
                        <para>"Open up" the group's XPath value using "address".
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_13">
                        <para>Pass the value "Ameaningfulstreetname 444" to the XPath ADDRESS/STREET
                        </para>
                    </callout>
                    <callout arearefs="cst_newgroup_14">
                        <para>Save the content by retrieving the ContentEngine EJB and calling its
                            <methodname>save()</methodname>
                            method.
                        </para>
                    </callout>
                </calloutlist>
            </programlistingco>
        </example>
    </para>

    <section xml:id="core_structures_group_parameters">
        <title>Group parameters</title>
        <para>
            The following is a list of parameters that can be passed as arguments to
            <classname>FxGroupEdit</classname>
            and
            <classname>FxGroupyAssignmentEdit</classname>
            when editing or creating a new group/assignment:
            <table xml:id="csg_table" class="flexive">
                <caption>FxGroupEdit/FxGroupAssignmentEdit shared parameters</caption>
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Method</th>
                        <th>Create</th>
                        <th>Edit</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Assignment GroupMode</td>
                        <td>
                            <methodname>setAssignmentGroupMode(GroupMode mode)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_yes_restrictions;</td>
                        <td>Set the group mode to allow any of its possible children or just one to be present.
                            Can only be changed for existing groups/assignments if no instances exist (See
                            <xref linkend="core_structure_groups_mode"/>
                            for more information)
                        </td>
                    </tr>
                    <tr>
                        <td>Hint</td>
                        <td>
                            <methodname>setHint(FxString hint)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_yes;</td>
                        <td>Set a hint text to be displayed in user interfaces.
                        </td>
                    </tr>
                    <tr>
                        <td>Label</td>
                        <td>
                            <methodname>setLabel(FxString label)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_yes;</td>
                        <td>Set a label text to be displayed in user interfaces.
                        </td>
                    </tr>
                    <tr>
                        <td>Multiplicity</td>
                        <td>
                            <methodname>setMultiplicity(FxMultiplicity multiplicity)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_yes_restrictions;</td>
                        <td>Set the multiplicity of this group. Can only be changed if no instances exist that
                            would violate the new setting. (See
                            <xref linkend="core_structure_multiplicity"/>
                            for more information). The group can restrict this setting
                            from being overwritten in an assignment.
                        </td>
                    </tr>
                    <tr>
                        <td>Options</td>
                        <td>
                            <methodname>setOption(..)</methodname>
                            <methodname>setOptionOverridable(..)</methodname>
                            <methodname>clearOption(..)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_yes;</td>
                        <td>
                            Option related operations. See<xref linkend="core_structures_options"/>.
                        </td>
                    </tr>
                </tbody>
            </table>
        </para>
        <para>
            <table xml:id="csge_table" class="flexive">
                <caption>FxGroupEdit exclusive parameters</caption>
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Method</th>
                        <th>Create</th>
                        <th>Edit</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Name</td>
                        <td>
                            <methodname>setName(String name)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_no;</td>
                        <td>Set the name of this group. This name is used in assignments as a proposal for the
                            XPath alias (unless a different one is requested). Currently the name can not be changed
                            for an existing group.
                        </td>
                    </tr>
                    <tr>
                        <td>Overridable multiplicity</td>
                        <td>
                            <methodname>setOverrideMultiplicity(boolean overrideMultiplicity)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_yes;</td>
                        <td>Restrict if assignments may override the multiplicity of this group. (See
                            <xref linkend="core_structure_multiplicity"/>
                            for more information).
                        </td>
                    </tr>
                </tbody>
            </table>
        </para>
        <para>
            <table xml:id="csgae_table" class="flexive">
                <caption>FxGroupAssignmentEdit exclusive parameters</caption>
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Method</th>
                        <th>Create</th>
                        <th>Edit</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Alias</td>
                        <td>
                            <methodname>setAlias(String alias)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_no;</td>
                        <td>Set the alias of a group assignment. Group assignments may define an alias to
                            allow multiple use of the same group but using a different name. The alias is part of the
                            XPath and is used to address an assignment. Changing an alias for existing assignments is
                            not supported (yet).
                        </td>
                    </tr>
                    <tr>
                        <td>Default multiplicity</td>
                        <td>
                            <methodname>setDefaultMultiplicity(int defaultMultiplicity)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_yes;</td>
                        <td>The default multiplicity determines how many values will be initialized for an
                            assignment (i.e. how many groups are created upon initialization). Useful in user interfaces
                            to pre-create a set of entries instead of one.
                        </td>
                    </tr>
                    <tr>
                        <td>Enabled</td>
                        <td>
                            <methodname>setEnabled(boolean enabled)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_yes_restrictions;</td>
                        <td>Enables or disables a group assignment - making it unavailable to editors, etc.
                            Updating an existing assignment is currently experimental and might have side-effects
                            ...
                        </td>
                    </tr>
                    <tr>
                        <td>Parent group assignment</td>
                        <td>
                            <methodname>setParentGroupAssignment(FxGroupAssignment parent)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_no;</td>
                        <td>If this assignment is assigned to a group, the assignment of the parent group (in the
                            context of the current type)
                        </td>
                    </tr>
                    <tr>
                        <td>Position</td>
                        <td>
                            <methodname>setPosition(int position)</methodname>
                        </td>
                        <td>&list_yes;</td>
                        <td>&list_yes;</td>
                        <td>Set the position of the assignment (within the same parent group). Changing an
                            assignments position will be upate all affected other assignments within the
                            same group. Invalid values will be adjusted (to 0 or the max. possible position)
                        </td>
                    </tr>
                </tbody>
            </table>
        </para>
    </section>

    <section xml:id="core_structure_groups_mode">
        <title>Group modes</title>
        <para>
            &Flexive; supports the two modes for groups
            <constant>OneOf</constant>
            and<constant>AnyOf</constant>:
            <itemizedlist>
                <listitem>
                    <para><constant>OneOf</constant>: Only one of the groups children may be present, honoring their
                        regular indices. This mode only makes sense if all subgroups/properties are optional!
                    </para>
                </listitem>
                <listitem>
                    <para><constant>AnyOf</constant>: Any of the groups children may be present, honoring their regular
                        indices. This is the default setting.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>
</section>